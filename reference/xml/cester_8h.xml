<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="cester_8h" kind="file" language="C++">
    <compoundname>cester.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">setjmp.h</includes>
    <incdepgraph>
      <node id="11">
        <label>stdlib.h</label>
      </node>
      <node id="16">
        <label>setjmp.h</label>
      </node>
      <node id="14">
        <label>string.h</label>
      </node>
      <node id="15">
        <label>signal.h</label>
      </node>
      <node id="12">
        <label>time.h</label>
      </node>
      <node id="10">
        <label>/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h</label>
        <link refid="cester.h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structtest__instance" prot="public">test_instance</innerclass>
    <innerclass refid="structtest__case" prot="public">test_case</innerclass>
    <innerclass refid="structallocated__memory" prot="public">allocated_memory</innerclass>
    <innerclass refid="structcester__array__struct" prot="public">cester_array_struct</innerclass>
    <innerclass refid="structsuper__test__instance" prot="public">super_test_instance</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" prot="public" static="no">
        <name>__CESTER_INLINE__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The inline keyword to optimize the function. In C89 and C90 the inline keyword semantic is different from current C standard semantic hence for compilation targeting C89 or C99 the inline keyword is ommited. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="46" column="13" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a6405ac2e364bfb49385d93f50c1ea3e9" prot="public" static="no">
        <name>__CESTER_LONG_LONG__</name>
        <initializer>long</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="47" column="13" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a828bb1dfda1afd67ca795075903d227d" prot="public" static="no">
        <name>__FUNCTION__</name>
        <initializer>&quot;&lt;unknown&gt;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="48" column="13" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ab84f56f39c77569225b79823a1cce112" prot="public" static="no">
        <name>__CESTER_CAST_CHAR_ARRAY__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="62" column="14" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a07fa1c9bc563510fa197df308772b4b3" prot="public" static="no">
        <name>EXOTICTYPES_WINDLLEXPORT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="104" column="10" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1adb89038ec025478b6b628899e7e7146f" prot="public" static="no">
        <name>EXOTIC_API</name>
        <initializer>extern</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Keyword to export the functions to allow ussage dynamically. NOT USED. IGNORED </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="110" column="22" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a694ad0cd5307d272e3e3ca64612176fb" prot="public" static="no">
        <name>CESTER_RESET_TERMINAL</name>
        <initializer>&quot;\x1B[0m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reset the terminal color </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="142" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a7eacf5e6c62d2a9420675b2eb57fecfc" prot="public" static="no">
        <name>CESTER_BOLD</name>
        <initializer>&quot;\x1B[1m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>bold text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="143" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ac5448195125c27dd34a571a9e78d48d7" prot="public" static="no">
        <name>CESTER_FOREGROUND_BLACK</name>
        <initializer>&quot;\x1B[30m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gray terminal foreground color </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="144" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ab0ed21eb2fa7f480b8eaf8ab2acf061d" prot="public" static="no">
        <name>CESTER_FOREGROUND_RED</name>
        <initializer>&quot;\x1B[31m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>red terminal foreground color </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="145" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a7e0ccb03a0bedefd6805e53aa6e60acd" prot="public" static="no">
        <name>CESTER_FOREGROUND_GREEN</name>
        <initializer>&quot;\x1B[32m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>green foreground color </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="146" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a291b6c28d8b76be61f3c456990159fe9" prot="public" static="no">
        <name>CESTER_FOREGROUND_YELLOW</name>
        <initializer>&quot;\x1B[33m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>yellow terminal foreground color </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="147" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ad33c3114808732a9b8c1a8bf862db49e" prot="public" static="no">
        <name>CESTER_FOREGROUND_BLUE</name>
        <initializer>&quot;\x1B[34m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>blue terminal foreground color </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="148" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a1237e678a0b0c1d1b0316a5e363863ed" prot="public" static="no">
        <name>CESTER_FOREGROUND_MAGENTA</name>
        <initializer>&quot;\x1B[35m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>magenta terminal foreground color </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="149" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aa32c83298a4b2773689d83f02c350ab8" prot="public" static="no">
        <name>CESTER_FOREGROUND_CYAN</name>
        <initializer>&quot;\x1B[36m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cyan terminal foreground color </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="150" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a8a9dc69021c0a1a803642fe1cc5bc124" prot="public" static="no">
        <name>CESTER_FOREGROUND_WHITE</name>
        <initializer>&quot;\x1B[37m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>white terminal foreground color </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="151" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a8e46159be4aadb1d456fd6a2a5cce696" prot="public" static="no">
        <name>CESTER_FOREGROUND_GRAY</name>
        <initializer>&quot;\x1B[90m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gray terminal foreground color </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="152" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a25a9b3e0d491f071edb9d9439c6b4311" prot="public" static="no">
        <name>CESTER_BACKGROUND_BLACK</name>
        <initializer>&quot;\x1B[40m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>black terminal background color </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="153" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a9f1f9756ecde45e272e3bce656ed658d" prot="public" static="no">
        <name>CESTER_BACKGROUND_RED</name>
        <initializer>&quot;\x1B[41m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>red terminal background color </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="154" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a4c1b3744be5c99846dec348ccf327378" prot="public" static="no">
        <name>CESTER_BACKGROUND_GREEN</name>
        <initializer>&quot;\x1B[42m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>green terminal background color </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="155" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aa3c1a6d33fab750f5ffaa597d371eb5a" prot="public" static="no">
        <name>CESTER_BACKGROUND_YELLOW</name>
        <initializer>&quot;\x1B[43m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>yellow terminal background color </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="156" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a9c06d3e2ef9ed7bc79c70d79802f1026" prot="public" static="no">
        <name>CESTER_BACKGROUND_BLUE</name>
        <initializer>&quot;\x1B[44m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>blue terminal background color </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="157" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a995245d9e3ede3c99ab143ec0f22d689" prot="public" static="no">
        <name>CESTER_BACKGROUND_MAGENTA</name>
        <initializer>&quot;\x1B[45m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>magenta terminal background color </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="158" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aee3386155a13e9d802e699291ec75a55" prot="public" static="no">
        <name>CESTER_BACKGROUND_CYAN</name>
        <initializer>&quot;\x1B[46m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cyan terminal background color </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="159" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a692a87495320ef68602f8890c696c497" prot="public" static="no">
        <name>CESTER_BACKGROUND_GRAY</name>
        <initializer>&quot;\x1B[100m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gray terminal background color </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="160" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ac051657c5bbcc2c791f858fd89add80a" prot="public" static="no">
        <name>CESTER_BACKGROUND_WHITE</name>
        <initializer>&quot;\x1B[47m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gray terminal background color </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="161" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aa655a3d67eafec9a020162b4329a620b" prot="public" static="no">
        <name>CESTER_RESET_TERMINAL_ATTR</name>
        <param></param>
        <initializer>;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reset the terminal color </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="162" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a3f7175f8b89d015d5361d140be50e076" prot="public" static="no">
        <name>CESTER_VERSION</name>
        <initializer>&quot;0.3&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cester current version </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="169" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a91a6d8fd77b79a18a599b141082e5899" prot="public" static="no">
        <name>CESTER_VERSION_NUM</name>
        <initializer>0.4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cester current version </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="174" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a5600857cd20a51acba3241d695f117e2" prot="public" static="no">
        <name>CESTER_LICENSE</name>
        <initializer>&quot;MIT License&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cester License </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="179" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a51ca65388920803f90aba2ba64f97e8e" prot="public" static="no">
        <name>CESTER_AUTHOR</name>
        <initializer>&quot;Adewale Azeez and contributors&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cester Authors </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="184" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a295bfc0bb98f055fbf7ee87f93011bf8" prot="public" static="no">
        <name>CESTER_HASH_SIGN</name>
        <initializer>#</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The hash # symbol for macro directive </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="189" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" prot="public" static="no">
        <name>CESTER_CONCAT</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>x y</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Concat two items including C macro directives. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="194" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ae8eeaa3bbfc29913e2d6b2f6b2093daf" prot="public" static="no">
        <name>CESTER_ARRAY_INITIAL_CAPACITY</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The initial amount of item the <ref refid="cester_8h_1a070259cacab7aadac6ed756f2565dc5e" kindref="member">CesterArray</ref> can accept the first time it initialized. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="286" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a69f7dabb6324bb1c1ff4be767c11bbc1" prot="public" static="no">
        <name>CESTER_ARRAY_MAX_CAPACITY</name>
        <initializer>((size_t) - 5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The maximum number of item the <ref refid="cester_8h_1a070259cacab7aadac6ed756f2565dc5e" kindref="member">CesterArray</ref> can contain, in case of the Memory manager array reaching this max capacity continous mem test will be disabled. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="293" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a7bc0edcc6c998b61f80866cced169f83" prot="public" static="no">
        <name>CESTER_ARRAY_FOREACH</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>for (x = 0; x &lt; w-&gt;size; ++x) {\
                                          void* y = w-&gt;buffer[x];\
                                          z\
                                      }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="302" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aff4334c3b1503a2841013801c9865163" prot="public" static="no">
        <name>cester_sprintf</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>sprintf(x, z, a, b);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="409" column="10" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aafa1d335c4cf0387ef573b4c9f57ccb3" prot="public" static="no">
        <name>cester_sprintf1</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <param><defname>a</defname></param>
        <initializer>sprintf(x, z, a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="410" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ad44e70720418979cc94bde1b5b99eee5" prot="public" static="no">
        <name>cester_sprintf2</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>sprintf(x, z, a, b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="411" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aa1b5cc06a9706b0c69bdcc60bfa691bb" prot="public" static="no">
        <name>cester_sprintf3</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>sprintf(x, z, a, b, c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="412" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a43b56645cdbea2af8c809747bdabde73" prot="public" static="no">
        <name>CESTER_CHANGE_STREAM</name>
        <param><defname>x</defname></param>
        <initializer>(superTestInstance.output_stream = x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the output stream used by cester to write data. The default is <computeroutput>stdout</computeroutput>. E.g to change the output stream to a file.</para><para><programlisting><codeline><highlight class="normal"><ref refid="cester_8h_1a43b56645cdbea2af8c809747bdabde73" kindref="member">CESTER_CHANGE_STREAM</ref>(fopen(</highlight><highlight class="stringliteral">&quot;./test.txt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;w+&quot;</highlight><highlight class="normal">));</highlight></codeline>
</programlisting></para><para>The code above changes the stream to a file test.txt, all the output from the test will be written in the file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="429" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a46998535966dad5778d6c8112bc58345" prot="public" static="no">
        <name>CESTER_NOCOLOR</name>
        <param></param>
        <initializer>(superTestInstance.no_color = 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Do not print to the output stream with color. This should be used to prevent writing the color bytes into a file stream (in case).</para><para>This option can also be set from the command line with <computeroutput>--cester-nocolor</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="437" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a8951bf8368f048537813fb14375e9ef0" prot="public" static="no">
        <name>CESTER_MINIMAL</name>
        <param></param>
        <initializer>(superTestInstance.minimal = 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print minimal info into the output stream. With this option set the expression evaluated will not be printed in the result output.</para><para>This option can also be set from the command line with <computeroutput>--cester-minimal</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="445" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a6fa58ee11340e1315ba71ffe53c325f5" prot="public" static="no">
        <name>CESTER_VERBOSE</name>
        <param></param>
        <initializer>(superTestInstance.verbose = 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print as much info as possible into the output stream. With this option set both passed and failed expression evaluated will be printed in the result.</para><para>This option can also be set from the command line with <computeroutput>--cester-verbose</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="453" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aaf35825f7303bc525aa18046af827f01" prot="public" static="no">
        <name>CESTER_PRINT_VERSION</name>
        <param></param>
        <initializer>(superTestInstance.print_version = 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print cester version before running any test.</para><para>This option can also be set from the command line with <computeroutput>--cester-printversion</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="460" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aabbe067a2ed2679ca1c60ab7b4008959" prot="public" static="no">
        <name>CESTER_SINGLE_OUPUT_ONLY</name>
        <param></param>
        <initializer>(superTestInstance.single_output_only = 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display test for a single test case only, skip syntesis and summary.</para><para>This option can also be set from the command line with <computeroutput>--cester-singleoutput</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="467" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a35fbc3061ecdc188a0d412b9dbb987ca" prot="public" static="no">
        <name>CESTER_NO_ISOLATION</name>
        <param></param>
        <initializer>(superTestInstance.isolate_tests = 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Do not isolate the tests, run each of the test cases in a single process. The drawback is if a test case causes segfault or crash the entire test crashes and no summary is displayed. No isolation causes a crash one crash all scenerio.</para><para>This option can also be set from the command line with <computeroutput>--cester-noisolation</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="477" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ab7ef90a678593e6201e081636efb0a26" prot="public" static="no">
        <name>CESTER_NO_MEMTEST</name>
        <param></param>
        <initializer>(superTestInstance.mem_test_active = 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disable memory leak detection test.</para><para>This option can also be set from the command line with <computeroutput>--cester-nomemtest</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="484" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aad47b7331cfba39ae700c48388453b99" prot="public" static="no">
        <name>CESTER_DO_MEMTEST</name>
        <param></param>
        <initializer>(superTestInstance.mem_test_active = 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable memory allocation. The combination of <ref refid="cester_8h_1ab7ef90a678593e6201e081636efb0a26" kindref="member">CESTER_NO_MEMTEST()</ref> and <ref refid="cester_8h_1aad47b7331cfba39ae700c48388453b99" kindref="member">CESTER_DO_MEMTEST()</ref> is valid only in non isolated tests.</para><para>This togle combined with <computeroutput><ref refid="cester_8h_1ab7ef90a678593e6201e081636efb0a26" kindref="member">CESTER_NO_MEMTEST()</ref></computeroutput> can be used to selectively test memory allocation in a test e.g. Calling <ref refid="cester_8h_1ab7ef90a678593e6201e081636efb0a26" kindref="member">CESTER_NO_MEMTEST()</ref> before a test case will prevent memory test from the beginning of that function and calling <ref refid="cester_8h_1aad47b7331cfba39ae700c48388453b99" kindref="member">CESTER_DO_MEMTEST()</ref> at the end of the test case will ensure memory allocation will be validated in all the other test case that follows. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="496" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a53d284c2dbddbf88cab4db96de4688aa" prot="public" static="no">
        <name>CESTER_OUTPUT_TEXT</name>
        <param></param>
        <initializer>superTestInstance.output_format = (char*) &quot;text&quot;;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the output format to text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="501" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a87834179a3deff8e4a6971bd04c0a5b7" prot="public" static="no">
        <name>CESTER_OUTPUT_JUNITXML</name>
        <param></param>
        <initializer>superTestInstance.output_format = (char*) &quot;junitxml&quot;;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the output format to junitxml </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="506" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1acce408c90ddec5c901799c8123852013" prot="public" static="no">
        <name>CESTER_OUTPUT_TAP</name>
        <param></param>
        <initializer>superTestInstance.output_format = (char*) &quot;tap&quot;;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the output format to TAP (Test Anything Protocol) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="511" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1acc2a5502c7f791676e191a1fd90d4164" prot="public" static="no">
        <name>CESTER_OUTPUT_TAPV13</name>
        <param></param>
        <initializer>superTestInstance.output_format = (char*) &quot;tapV13&quot;;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the output format to TAP (Test Anything Protocol) Version 13 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="516" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aed89b67a97e0abb2000724110a40d489" prot="public" static="no">
        <name>CESTER_FORMAT_TESTNAME</name>
        <param></param>
        <initializer>superTestInstance.format_test_name = 1;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Format the test case name for output. E.g the test name <computeroutput>modify_test_instance</computeroutput> becomes <computeroutput>modify test instance</computeroutput>. This does not apply to junitxml as the test name remain the way it declared in the test source. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="524" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="524" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a7d7d6e062944036b6d40007e99a98647" prot="public" static="no">
        <name>CESTER_DONT_FORMAT_TESTNAME</name>
        <param></param>
        <initializer>superTestInstance.format_test_name = 0;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Do not format the test case name, it remain the way it declared in the test source. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="530" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="530" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1adce014b0eb340f3ee8ea2a760f240f70" prot="public" static="no">
        <name>CESTER_TOTAL_TESTS_COUNT</name>
        <initializer>(superTestInstance.total_tests_count)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The total number of tests that is present in the test file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="537" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="537" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a39a964ef52e5a41fd123c32c30717b02" prot="public" static="no">
        <name>CESTER_TOTAL_TESTS_RAN</name>
        <initializer>(superTestInstance.total_tests_ran)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The total number of tests that was ran. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="542" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="542" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aab31a97d79a6bd7ba538143df992adda" prot="public" static="no">
        <name>CESTER_TOTAL_FAILED_TESTS_COUNT</name>
        <initializer>(superTestInstance.total_failed_tests_count)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The total number of tests that failed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="547" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="547" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a95a2b3e3a92602260926e0acbeec8623" prot="public" static="no">
        <name>CESTER_TOTAL_TEST_ERRORS_COUNT</name>
        <initializer>(superTestInstance.total_test_errors_count)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The total number of errors that occur during the test.</para><para>The errors is not tied to the test cases, the error is tied to cester fixtures, environment error and error that occur outside a test case.</para><para>Error that occur within a test case is reported for that test case </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="559" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="559" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a1ee3507e6dc71e47e93f8a181d3886d6" prot="public" static="no">
        <name>CESTER_TOTAL_TESTS_SKIPPED</name>
        <initializer>(superTestInstance.skipped_test_count)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of test that was skipped.</para><para>If the selected test_cases_size is 0 then no test was skipped else the number of executed selected test cases minus the total number of test cases is the number of test that was skipped. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="568" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ac5dc441bd557fee801cda28038342e66" prot="public" static="no">
        <name>CESTER_TOTAL_PASSED_TESTS_COUNT</name>
        <initializer>(superTestInstance.total_passed_tests_count)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The total number of tests that passed. CESTER_TOTAL_TESTS_COUNT - CESTER_TOTAL_FAILED_TESTS_COUNT </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="573" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="573" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1af44061d47a11ee1696be62022674aed5" prot="public" static="no">
        <name>CESTER_TOTAL_TODO_TESTS</name>
        <initializer>(superTestInstance.todo_tests_count)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of test that was marked as todo and skipped.</para><para>If the selected test_cases_size is 0 then no test was skipped else the number of executed selected test cases minus the total number of test cases is the number of test that was skipped. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="582" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="582" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ae1c1f1eb8354492276bdbf70d8875f92" prot="public" static="no">
        <name>CESTER_RUN_ALL_TESTS</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>cester_run_all_test(x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Run all the test registered in cester, the TestInstance* pointer will be initalized with the pointer to the string arguments from cli and the length of the arguments. The <computeroutput>void* arg</computeroutput> pointer in the TestInstance* can be initalized in the *_BEFORE_* function to share data between the unit tests. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="591" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="591" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a10319efcc5418b6db45c924bd8128142" prot="public" static="no">
        <name>CESTER_REPORT_SUCCESS_REGARDLESS</name>
        <param></param>
        <initializer>(superTestInstance.report_failure_regardless = 0); (superTestInstance.report_success_regardless = 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Always mark the test as success even if the test cases failed or an error occur while running the test. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="597" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="597" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aaa41dbea734c299545a9af2c26fb3266" prot="public" static="no">
        <name>CESTER_REPORT_FAILURE_REGARDLESS</name>
        <param></param>
        <initializer>(superTestInstance.report_success_regardless = 0); (superTestInstance.report_failure_regardless = 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Always mark the test as failure even if the test cases passes and no error occur. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="603" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="603" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1afe4bfd863665d2636d28b13afaf1f43e" prot="public" static="no">
        <name>CESTER_SELECTCOLOR</name>
        <param><defname>x</defname></param>
        <initializer>(superTestInstance.no_color == 1 ? &quot;&quot; : x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="824" column="10" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="824" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ab550ea2f5b51069a052158993e14d357" prot="public" static="no">
        <name>CESTER_GET_RESULT_AGGR</name>
        <initializer>(superTestInstance.total_failed_tests_count == 0 ? &quot;SUCCESS&quot; : &quot;FAILURE&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="826" column="10" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="826" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a2cd3160101fb7fd13d8f12b83100ff3f" prot="public" static="no">
        <name>CESTER_GET_RESULT_AGGR_COLOR</name>
        <initializer>(superTestInstance.total_failed_tests_count == 0 ? (<ref refid="cester_8h_1a7e0ccb03a0bedefd6805e53aa6e60acd" kindref="member">CESTER_FOREGROUND_GREEN</ref>) : (<ref refid="cester_8h_1ab0ed21eb2fa7f480b8eaf8ab2acf061d" kindref="member">CESTER_FOREGROUND_RED</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="827" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="827" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aa2f0945a8d64168b5bb52c074e58988c" prot="public" static="no">
        <name>CESTER_DELEGATE_FPRINT_STR</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>fprintf(superTestInstance.output_stream, &quot;%s%s%s&quot;, CESTER_SELECTCOLOR(x), y, <ref refid="cester_8h_1afe4bfd863665d2636d28b13afaf1f43e" kindref="member">CESTER_SELECTCOLOR</ref>(<ref refid="cester_8h_1a694ad0cd5307d272e3e3ca64612176fb" kindref="member">CESTER_RESET_TERMINAL</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="838" column="10" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="838" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a0a222f2a133e690a489906efaa23da10" prot="public" static="no">
        <name>CESTER_DELEGATE_FPRINT_INT</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>fprintf(superTestInstance.output_stream, &quot;%s%d%s&quot;, CESTER_SELECTCOLOR(x), y, <ref refid="cester_8h_1afe4bfd863665d2636d28b13afaf1f43e" kindref="member">CESTER_SELECTCOLOR</ref>(<ref refid="cester_8h_1a694ad0cd5307d272e3e3ca64612176fb" kindref="member">CESTER_RESET_TERMINAL</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="839" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="839" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a734daca33a1103d378d0e5af53309b40" prot="public" static="no">
        <name>CESTER_DELEGATE_FPRINT_UINT</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>fprintf(superTestInstance.output_stream, &quot;%s%u%s&quot;, CESTER_SELECTCOLOR(x), y, <ref refid="cester_8h_1afe4bfd863665d2636d28b13afaf1f43e" kindref="member">CESTER_SELECTCOLOR</ref>(<ref refid="cester_8h_1a694ad0cd5307d272e3e3ca64612176fb" kindref="member">CESTER_RESET_TERMINAL</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="840" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="840" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aacfc421541ab63b03ad7dcb104c97871" prot="public" static="no">
        <name>CESTER_DELEGATE_FPRINT_DOUBLE</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>fprintf(superTestInstance.output_stream, &quot;%s%f%s&quot;, CESTER_SELECTCOLOR(x), y, <ref refid="cester_8h_1afe4bfd863665d2636d28b13afaf1f43e" kindref="member">CESTER_SELECTCOLOR</ref>(<ref refid="cester_8h_1a694ad0cd5307d272e3e3ca64612176fb" kindref="member">CESTER_RESET_TERMINAL</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="842" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="842" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1af18ebe2433a89fe2d9908ee1c9f19e7e" prot="public" static="no">
        <name>CESTER_DELEGATE_FPRINT_DOUBLE_2</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>fprintf(superTestInstance.output_stream, &quot;%s%.2f%s&quot;, CESTER_SELECTCOLOR(x), y, CESTER_SELECTCOLOR(CESTER_RESET_TERMINAL))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="843" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="843" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a886a892eaa15f1f8316d8bac10b47892" prot="public" static="no">
        <name>cester_assert_nothing</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Does nothing just an empty placeholder. Can be used in the CESTER_SKIP_TEST and CESTER_TODO_TEST when compiling with -ansi and -pedantic-errors flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1558" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1558" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a668c72299b1bb7748dc502a6b073ad7f" prot="public" static="no">
        <name>cester_assert_cmp_msg</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>cester_evaluate_expression(w x y, z, __FILE__, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two argument using the provided operator Prints the expression as in the source code</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>a value to compare to y </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the operator to use for the comparison. One of ==, !=, &lt;, &gt;, &lt;=, &gt;= </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>a value to compare to w </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the expression to print in output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1569" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1569" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a51ca2f11f7def928a95a0b3cdd5c7ec0" prot="public" static="no">
        <name>cester_assert_cmp</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer><ref refid="cester_8h_1a668c72299b1bb7748dc502a6b073ad7f" kindref="member">cester_assert_cmp_msg</ref>(x, y, z, &quot;(&quot; #x &quot; &quot; #y &quot; &quot; #z &quot;)&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two argument using the provided operator Prints the expression as in the source code</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a value to compare to z </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the operator to use for the comparison. One of ==, !=, &lt;, &gt;, &lt;=, &gt;= </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>a value to compare to x </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1579" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1579" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ae04382401adcf49e05bcca467774fb8f" prot="public" static="no">
        <name>cester_assert_true</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="cester_8h_1a668c72299b1bb7748dc502a6b073ad7f" kindref="member">cester_assert_cmp_msg</ref>(x, ==, 1, &quot;(&quot; #x &quot;)&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the expression evaluates to true. Prints the expression as in the source code.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the expression to check if true </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1587" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1587" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a5f8e5028dd3bfa28dcaaae44cd1bbfad" prot="public" static="no">
        <name>cester_assert_true_msg</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1a668c72299b1bb7748dc502a6b073ad7f" kindref="member">cester_assert_cmp_msg</ref>(x, ==, 1, y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the expression evaluates to true. Prints the second argument to the macro as the expression in output.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the expression to check if true </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the text to print out in output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1597" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1597" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aad8a6cbab6a3d0963e7eb389a65cebfc" prot="public" static="no">
        <name>cester_assert_false</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="cester_8h_1a668c72299b1bb7748dc502a6b073ad7f" kindref="member">cester_assert_cmp_msg</ref>(x, ==, 0, &quot;(&quot; #x &quot;)&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the expression evaluates to false. Prints the expression as in the source code.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the expression to check if false </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1605" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1605" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a844bb98598ae9c9edb77e43236a07ab7" prot="public" static="no">
        <name>cester_assert_false_msg</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1a668c72299b1bb7748dc502a6b073ad7f" kindref="member">cester_assert_cmp_msg</ref>(x, ==, 0, y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the expression evaluates to false. Prints the second argument to the macro as the expression in output.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the expression to check if false </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the text to print out in output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1615" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a27b38d55d249ffef9b43c287174c0555" prot="public" static="no">
        <name>cester_assert_null</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="cester_8h_1a668c72299b1bb7748dc502a6b073ad7f" kindref="member">cester_assert_cmp_msg</ref>(x, ==, NULL, &quot;(&quot; #x &quot;)&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assertion macro that passes if an expression is NULL. Prints the expression as in the source code.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the expression to check if it NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1623" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1623" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a8577212e198bc735ed42e00bfbed71aa" prot="public" static="no">
        <name>cester_assert_not_null</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="cester_8h_1a668c72299b1bb7748dc502a6b073ad7f" kindref="member">cester_assert_cmp_msg</ref>(x, !=, NULL, &quot;!(&quot; #x &quot;)&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assertion macro that passes if an expression is not NULL. Prints the expression as in the source code.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the expression to check if it not NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1631" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1631" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a46a752bc620dbdfbc4f5f851307b0d72" prot="public" static="no">
        <name>cester_assert_equal</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>cester_evaluate_expect_actual(x==y, 1, #x, #y, __FILE__, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assertion macro that passes if the two expression is equal. Prints the expression as in the source code</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the first expression to compare </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the second expression to compare to the first expression </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1640" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1640" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a7ac762f8e6f156316ac7661a43bcb7e3" prot="public" static="no">
        <name>cester_assert_not_equal</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>cester_evaluate_expect_actual(x!=y, 0, #x, #y, __FILE__, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assertion macro that passes if the two expression is not equal. Prints the expression as in the source code</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the first expression to compare </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the second expression to compare to the first expression </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1649" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1649" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1acee182038754c26290a9296f4697df83" prot="public" static="no">
        <name>cester_assert_str_equal</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>cester_evaluate_expect_actual_str(x, y, 1, __FILE__, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two strings. If the comparison fails the test case is marked as failed. The advantage of this macro is that it display the actual values of the two strings.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a string to compare </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another string to compare with the first string </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1659" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1659" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a716d9b3574ff2d02881ea2118f312472" prot="public" static="no">
        <name>cester_assert_str_not_equal</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>cester_evaluate_expect_actual_str(x, y, 0, __FILE__, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two strings. If the comparison passes the test case is marked as failed. The advantage of this macro is that it display the actual values of the two strings.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a string to compare </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another string to compare with the first string </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1669" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1669" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a4906d3f737b8653a5f79e3f6509433c3" prot="public" static="no">
        <name>cester_assert_ptr_equal</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>cester_evaluate_expect_actual_ptr(x, y, 1, __FILE__, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two pointers. If the comparison fails the test case is marked as failed. The advantage of this macro is that it display the actual values of the two pointers.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to compare </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another pointer to compare with the first pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1679" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aba6f3878b6967a7764e22b9ac97f5b32" prot="public" static="no">
        <name>cester_assert_ptr_not_equal</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>cester_evaluate_expect_actual_ptr(x, y, 0, __FILE__, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two pointers. If the comparison passes the test case is marked as failed. The advantage of this macro is that it display the actual values of the two pointers.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to compare </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another pointer to compare with the first pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1689" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1689" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a8b399ede50e1a5076e22eb94d6c0a4c7" prot="public" static="no">
        <name>__internal_cester_assert_cmp</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>(w x y, z, w, y, #x, __FILE__, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1692" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1692" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a226f3f1f736c15413ea1ffd63c0f6a62" prot="public" static="no">
        <name>__internal_cester_assert_eq</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>(x == y, &quot;expected &quot; #z &quot;,%s received &quot; #z, y, x, &quot;&quot;, __FILE__, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1693" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1693" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aaf5de68fa3201fdd6dd999f120daba1b" prot="public" static="no">
        <name>__internal_cester_assert_ne</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>(x != y, &quot;not expecting &quot; #z &quot;,%s found &quot; #z, x, y, &quot;&quot;, __FILE__, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1694" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1694" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a841683410a4864dec939ab2800f75917" prot="public" static="no">
        <name>__internal_cester_assert_gt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>(x &gt; y, &quot;expected value to be greater than &quot; #z &quot;,%s received &quot; #z, x, y, &quot;&quot;, __FILE__, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1695" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1695" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1af4def7a0532353547c568c933d336ddf" prot="public" static="no">
        <name>__internal_cester_assert_ge</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>(x &gt;= y, &quot;expected value to be greater than or equal to &quot; #z &quot;,%s received &quot; #z, x, y, &quot;&quot;, __FILE__, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1696" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1696" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a8a726d858451d504fd00943bfffab57d" prot="public" static="no">
        <name>__internal_cester_assert_lt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>(x &lt; y, &quot;expected value to be lesser than &quot; #z &quot;,%s received &quot; #z, x, y, &quot;&quot;, __FILE__, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1697" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1697" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ad78aca6b8298ac4b7ec0c21755f438dc" prot="public" static="no">
        <name>__internal_cester_assert_le</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>(x &lt;= y, &quot;expected value to be lesser than or equal to &quot; #z &quot;,%s received &quot; #z, x, y, &quot;&quot;, __FILE__, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1698" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1698" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aef29e0b0b523407a1d83c49f3305c8ed" prot="public" static="no">
        <name>cester_assert_cmp_char</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_char, <ref refid="cester_8h_1a8b399ede50e1a5076e22eb94d6c0a4c7" kindref="member">__internal_cester_assert_cmp</ref>(w,x,y,z))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two char using the provided operator This macro prints out the actual values of the two chars.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>a char </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the operator to use for the comparison. One of ==, !=, &lt;, &gt;, &lt;=, &gt;= </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another char </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the string formated for output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1710" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1710" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aeb3b1e9849158a634909a9e3b65fb5a2" prot="public" static="no">
        <name>cester_assert_char_eq</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_char, <ref refid="cester_8h_1a226f3f1f736c15413ea1ffd63c0f6a62" kindref="member">__internal_cester_assert_eq</ref>(x,y,%c))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two characters are the same. This macro prints out the actual values of the two characters.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a char </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another char </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1720" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1720" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a090ce1cd733bfb1de6969b8f75fb275d" prot="public" static="no">
        <name>cester_assert_char_ne</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_char, <ref refid="cester_8h_1aaf5de68fa3201fdd6dd999f120daba1b" kindref="member">__internal_cester_assert_ne</ref>(x,y,%c))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two char are not the same. This macro prints out the actual values of the two chars.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a char </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another char </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1730" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1730" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a71306eaca6af056a6c868dec8973bf81" prot="public" static="no">
        <name>cester_assert_char_gt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_char, <ref refid="cester_8h_1a841683410a4864dec939ab2800f75917" kindref="member">__internal_cester_assert_gt</ref>(x,y,%c))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a char is greater than the other. This macro prints out the actual values of the two chars.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a char </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another char </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1740" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1740" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ad7e9e2d26284f7a6972305e2485ff83b" prot="public" static="no">
        <name>cester_assert_char_ge</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_char, <ref refid="cester_8h_1af4def7a0532353547c568c933d336ddf" kindref="member">__internal_cester_assert_ge</ref>(x,y,%c))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a char is greater than or equal to the other. This macro prints out the actual values of the two chars.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a char </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another char </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1750" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1750" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a7d906e0cbfe5676020aa47c5cfad2b58" prot="public" static="no">
        <name>cester_assert_char_lt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_char, <ref refid="cester_8h_1a8a726d858451d504fd00943bfffab57d" kindref="member">__internal_cester_assert_lt</ref>(x,y,%c))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a char is lesser than the other. This macro prints out the actual values of the two chars.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a char </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another char </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1760" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1760" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a4147773c7d2c558eb6f34ac25446033d" prot="public" static="no">
        <name>cester_assert_char_le</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_char, <ref refid="cester_8h_1ad78aca6b8298ac4b7ec0c21755f438dc" kindref="member">__internal_cester_assert_le</ref>(x,y,%c))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a char is lesser than or equal to the other. This macro prints out the actual values of the two chars.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a char </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another char </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1770" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1770" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aeb3f93765f540b20698836b43be65009" prot="public" static="no">
        <name>cester_assert_cmp_uchar</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_uchar, <ref refid="cester_8h_1a8b399ede50e1a5076e22eb94d6c0a4c7" kindref="member">__internal_cester_assert_cmp</ref>(w,x,y,z))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two unsigned char using the provided operator This macro prints out the actual values of the two unsigned char.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned char </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the operator to use for the comparison. One of ==, !=, &lt;, &gt;, &lt;=, &gt;= </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned char </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the string formated for output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1782" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1782" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a87a3d77af030f5a6e0fda5292965008b" prot="public" static="no">
        <name>cester_assert_uchar_eq</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_uchar, <ref refid="cester_8h_1a226f3f1f736c15413ea1ffd63c0f6a62" kindref="member">__internal_cester_assert_eq</ref>(x,y,%c))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two unsigned char are the same. This macro prints out the actual values of the two unsigned char.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned char </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned char </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1792" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1792" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1afc80b51597e5f2d6cae2864a47084d6a" prot="public" static="no">
        <name>cester_assert_uchar_ne</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_uchar, <ref refid="cester_8h_1aaf5de68fa3201fdd6dd999f120daba1b" kindref="member">__internal_cester_assert_ne</ref>(x,y,%c))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two unsigned char are not the same. This macro prints out the actual values of the two unsigned char.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned char </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned char </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1802" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1802" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1afecac4fb6b309a3ce89c89918191b7ad" prot="public" static="no">
        <name>cester_assert_uchar_gt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_uchar, <ref refid="cester_8h_1a841683410a4864dec939ab2800f75917" kindref="member">__internal_cester_assert_gt</ref>(x,y,%c))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a unsigned char is greater than the other. This macro prints out the actual values of the two unsigned char.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned char </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned char </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1812" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1812" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a4abed699cc3f6f0ea9a7a8a3136b4424" prot="public" static="no">
        <name>cester_assert_uchar_ge</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_uchar, <ref refid="cester_8h_1af4def7a0532353547c568c933d336ddf" kindref="member">__internal_cester_assert_ge</ref>(x,y,%c))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a unsigned char is greater than or equal to the other. This macro prints out the actual values of the two unsigned char.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned char </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned char </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1822" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1822" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ab2ba7d029c11a5f35779be153fba6935" prot="public" static="no">
        <name>cester_assert_uchar_lt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_uchar, <ref refid="cester_8h_1a8a726d858451d504fd00943bfffab57d" kindref="member">__internal_cester_assert_lt</ref>(x,y,%c))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a unsigned char is lesser than the other. This macro prints out the actual values of the two unsigned char.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned char </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned char </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1832" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1832" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a3ec857c39ab0e9a0adcb61465f6b9055" prot="public" static="no">
        <name>cester_assert_uchar_le</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_uchar, <ref refid="cester_8h_1ad78aca6b8298ac4b7ec0c21755f438dc" kindref="member">__internal_cester_assert_le</ref>(x,y,%c))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a unsigned char is lesser than or equal to the other. This macro prints out the actual values of the two unsigned char.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned char </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned char </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1842" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1842" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a815a966d4ce8942e1fbe9e7992c51ea8" prot="public" static="no">
        <name>cester_assert_cmp_short</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_short, <ref refid="cester_8h_1a8b399ede50e1a5076e22eb94d6c0a4c7" kindref="member">__internal_cester_assert_cmp</ref>(w,x,y,z))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two short using the provided operator This macro prints out the actual values of the two short.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>a short </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the operator to use for the comparison. One of ==, !=, &lt;, &gt;, &lt;=, &gt;= </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another short </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the string formated for output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1854" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1854" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aa8f38e1dc34b73b2061b071690fc306d" prot="public" static="no">
        <name>cester_assert_short_eq</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_short, <ref refid="cester_8h_1a226f3f1f736c15413ea1ffd63c0f6a62" kindref="member">__internal_cester_assert_eq</ref>(x,y,%hi))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two short are the same. This macro prints out the actual values of the two short.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a short </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another short </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1864" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1864" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1abc6127492cd4c7b973e4d0787db19b19" prot="public" static="no">
        <name>cester_assert_short_ne</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_short, <ref refid="cester_8h_1aaf5de68fa3201fdd6dd999f120daba1b" kindref="member">__internal_cester_assert_ne</ref>(x,y,%hi))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two short are not the same. This macro prints out the actual values of the two short.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a short </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another short </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1874" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1874" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a6f9d21d0745d4aadc0938fd9c1182fc8" prot="public" static="no">
        <name>cester_assert_short_gt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_short, <ref refid="cester_8h_1a841683410a4864dec939ab2800f75917" kindref="member">__internal_cester_assert_gt</ref>(x,y,%hi))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a short is greater than the other. This macro prints out the actual values of the two short.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a short </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another short </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1884" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1884" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a1507dc966b4c86290fa0c0e90eb5130a" prot="public" static="no">
        <name>cester_assert_short_ge</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_short, <ref refid="cester_8h_1af4def7a0532353547c568c933d336ddf" kindref="member">__internal_cester_assert_ge</ref>(x,y,%hi))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a short is greater than or equal to the other. This macro prints out the actual values of the two short.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a short </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another short </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1894" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1894" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a16211c41dc56f36a8ae42b418200a911" prot="public" static="no">
        <name>cester_assert_short_lt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_short, <ref refid="cester_8h_1a8a726d858451d504fd00943bfffab57d" kindref="member">__internal_cester_assert_lt</ref>(x,y,%hi))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a short is lesser than the other. This macro prints out the actual values of the two short.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a short </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another short </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1904" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1904" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a00194f8c1cfd72e4d015ea3e6ddf9702" prot="public" static="no">
        <name>cester_assert_short_le</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_short, <ref refid="cester_8h_1ad78aca6b8298ac4b7ec0c21755f438dc" kindref="member">__internal_cester_assert_le</ref>(x,y,%hi))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a short is lesser than or equal to the other. This macro prints out the actual values of the two short.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a short </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another short </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1914" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1914" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1adf61a9d04d77167c742286764ce66753" prot="public" static="no">
        <name>cester_assert_cmp_ushort</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ushort, <ref refid="cester_8h_1a8b399ede50e1a5076e22eb94d6c0a4c7" kindref="member">__internal_cester_assert_cmp</ref>(w,x,y,z))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two unsigned short using the provided operator This macro prints out the actual values of the two unsigned short.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned short </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the operator to use for the comparison. One of ==, !=, &lt;, &gt;, &lt;=, &gt;= </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned short </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the string formated for output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1926" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1926" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a42730bb53aba27fc5c661fdf92531f89" prot="public" static="no">
        <name>cester_assert_ushort_eq</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ushort, <ref refid="cester_8h_1a226f3f1f736c15413ea1ffd63c0f6a62" kindref="member">__internal_cester_assert_eq</ref>(x,y,%hu))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two unsigned short are the same. This macro prints out the actual values of the two unsigned short.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned short </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned short </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1936" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1936" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a50e27c266bf419340f5df6571b6be3b5" prot="public" static="no">
        <name>cester_assert_ushort_ne</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ushort, <ref refid="cester_8h_1aaf5de68fa3201fdd6dd999f120daba1b" kindref="member">__internal_cester_assert_ne</ref>(x,y,%hu))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two unsigned short are not the same. This macro prints out the actual values of the two unsigned short.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned short </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned short </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1946" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1946" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a769ef22b0060a7b16051bf624b600fa1" prot="public" static="no">
        <name>cester_assert_ushort_gt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ushort, <ref refid="cester_8h_1a841683410a4864dec939ab2800f75917" kindref="member">__internal_cester_assert_gt</ref>(x,y,%hu))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a unsigned short is greater than the other. This macro prints out the actual values of the two unsigned short.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned short </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned short </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1956" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1956" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ac9c0b116741a718d45f6c4e4fa1ace8a" prot="public" static="no">
        <name>cester_assert_ushort_ge</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ushort, <ref refid="cester_8h_1af4def7a0532353547c568c933d336ddf" kindref="member">__internal_cester_assert_ge</ref>(x,y,%hu))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a unsigned short is greater than or equal to the other. This macro prints out the actual values of the two unsigned short.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned short </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned short </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1966" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1966" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a3d7f400c6e3c79c3b03bc9ffdf7968e1" prot="public" static="no">
        <name>cester_assert_ushort_lt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ushort, <ref refid="cester_8h_1a8a726d858451d504fd00943bfffab57d" kindref="member">__internal_cester_assert_lt</ref>(x,y,%hu))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a unsigned short is lesser than the other. This macro prints out the actual values of the two unsigned short.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned short </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned short </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1976" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1976" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a1b57a4124f1b0ea2e37b49c255ced7f7" prot="public" static="no">
        <name>cester_assert_ushort_le</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ushort, <ref refid="cester_8h_1ad78aca6b8298ac4b7ec0c21755f438dc" kindref="member">__internal_cester_assert_le</ref>(x,y,%hu))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a unsigned short is lesser than or equal to the other. This macro prints out the actual values of the two unsigned short.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned short </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned short </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1986" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1986" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a8a3464e4f2e2017f52c63853a940e60b" prot="public" static="no">
        <name>cester_assert_cmp_int</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_int, <ref refid="cester_8h_1a8b399ede50e1a5076e22eb94d6c0a4c7" kindref="member">__internal_cester_assert_cmp</ref>(w,x,y,z))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two int using the provided operator This macro prints out the actual values of the two int.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>an int </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the operator to use for the comparison. One of ==, !=, &lt;, &gt;, &lt;=, &gt;= </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another int </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the string formated for output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1998" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1998" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ae5c34f5882a34eb733a7e5ef5e63fb5e" prot="public" static="no">
        <name>cester_assert_int_eq</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_int, <ref refid="cester_8h_1a226f3f1f736c15413ea1ffd63c0f6a62" kindref="member">__internal_cester_assert_eq</ref>(x,y,%d))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two int are the same. This macro prints out the actual values of the two int.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an int </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another int </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2008" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2008" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a1ca6e2e5f903887cafcac7f3c4294c5b" prot="public" static="no">
        <name>cester_assert_int_ne</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_int, <ref refid="cester_8h_1aaf5de68fa3201fdd6dd999f120daba1b" kindref="member">__internal_cester_assert_ne</ref>(x,y,%d))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two int are not the same. This macro prints out the actual values of the two int.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an int </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another int </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2018" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2018" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a443a22e2b3c9ba6f3e260b19a1b5cff3" prot="public" static="no">
        <name>cester_assert_int_gt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_int, <ref refid="cester_8h_1a841683410a4864dec939ab2800f75917" kindref="member">__internal_cester_assert_gt</ref>(x,y,%d))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a int is greater than the other. This macro prints out the actual values of the two int.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an int </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another int </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2028" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2028" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ad204d3ca082bc1242841040d3c927071" prot="public" static="no">
        <name>cester_assert_int_ge</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_int, <ref refid="cester_8h_1af4def7a0532353547c568c933d336ddf" kindref="member">__internal_cester_assert_ge</ref>(x,y,%d))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a int is greater than or equal to the other. This macro prints out the actual values of the two int.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an int </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another int </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2038" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2038" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ab1829ee2bd1a55b710229836929044fe" prot="public" static="no">
        <name>cester_assert_int_lt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_int, <ref refid="cester_8h_1a8a726d858451d504fd00943bfffab57d" kindref="member">__internal_cester_assert_lt</ref>(x,y,%d))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a int is lesser than the other. This macro prints out the actual values of the two int.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an int </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another int </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2048" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2048" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a4070583d6537736fd2edd4b65abba2a7" prot="public" static="no">
        <name>cester_assert_int_le</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_int, <ref refid="cester_8h_1ad78aca6b8298ac4b7ec0c21755f438dc" kindref="member">__internal_cester_assert_le</ref>(x,y,%d))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a int is lesser than or equal to the other. This macro prints out the actual values of the two int.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an int </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another int </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2058" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2058" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a8453a9190a1875cf0f3151251ec98e15" prot="public" static="no">
        <name>cester_assert_cmp_uint</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_uint, <ref refid="cester_8h_1a8b399ede50e1a5076e22eb94d6c0a4c7" kindref="member">__internal_cester_assert_cmp</ref>(w,x,y,z))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two unsigned int using the provided operator This macro prints out the actual values of the two unsigned int.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned int </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the operator to use for the comparison. One of ==, !=, &lt;, &gt;, &lt;=, &gt;= </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned int </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the string formated for output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2070" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2070" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1abe2bf55ae3c19c83484f1efedc2fe3f5" prot="public" static="no">
        <name>cester_assert_uint_eq</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_uint, <ref refid="cester_8h_1a226f3f1f736c15413ea1ffd63c0f6a62" kindref="member">__internal_cester_assert_eq</ref>(x,y,%u))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two unsigned int are the same. This macro prints out the actual values of the two unsigned int.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned int </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned int </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2080" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2080" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a1c4a26873f76bd7ebe71b10313232c02" prot="public" static="no">
        <name>cester_assert_uint_ne</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_uint, <ref refid="cester_8h_1aaf5de68fa3201fdd6dd999f120daba1b" kindref="member">__internal_cester_assert_ne</ref>(x,y,%u))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two unsigned int are not the same. This macro prints out the actual values of the two unsigned int.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned int </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned int </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2090" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2090" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1afd8afe62934eb63acde2bde862b42e11" prot="public" static="no">
        <name>cester_assert_uint_gt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_uint, <ref refid="cester_8h_1a841683410a4864dec939ab2800f75917" kindref="member">__internal_cester_assert_gt</ref>(x,y,%u))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a unsigned int is greater than the other. This macro prints out the actual values of the two unsigned int.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned int </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned int </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2100" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a9a5098e2a9e0f5e6f0316d2e2e904a4f" prot="public" static="no">
        <name>cester_assert_uint_ge</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_uint, <ref refid="cester_8h_1af4def7a0532353547c568c933d336ddf" kindref="member">__internal_cester_assert_ge</ref>(x,y,%u))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a unsigned int is greater than or equal to the other. This macro prints out the actual values of the two unsigned int.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned int </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned int </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2110" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a76f728e37a7df3f4479c3cb60941ecc5" prot="public" static="no">
        <name>cester_assert_uint_lt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_uint, <ref refid="cester_8h_1a8a726d858451d504fd00943bfffab57d" kindref="member">__internal_cester_assert_lt</ref>(x,y,%u))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a unsigned int is lesser than the other. This macro prints out the actual values of the two unsigned int.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned int </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned int </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2120" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ae5f850cc4eaaa797b123ffb5b3d12e96" prot="public" static="no">
        <name>cester_assert_uint_le</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_uint, <ref refid="cester_8h_1ad78aca6b8298ac4b7ec0c21755f438dc" kindref="member">__internal_cester_assert_le</ref>(x,y,%u))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a unsigned int is lesser than or equal to the other. This macro prints out the actual values of the two unsigned int.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an unsigned int </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned int </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2130" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a64b611b6d4f0f85d72b42c5d49b1ff2b" prot="public" static="no">
        <name>cester_assert_cmp_long</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_long, <ref refid="cester_8h_1a8b399ede50e1a5076e22eb94d6c0a4c7" kindref="member">__internal_cester_assert_cmp</ref>(w,x,y,z))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two long using the provided operator This macro prints out the actual values of the two long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>a long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the operator to use for the comparison. One of ==, !=, &lt;, &gt;, &lt;=, &gt;= </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the string formated for output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2142" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a2438577e08e7b0b841e1e465d0d8cdd6" prot="public" static="no">
        <name>cester_assert_long_eq</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_long, <ref refid="cester_8h_1a226f3f1f736c15413ea1ffd63c0f6a62" kindref="member">__internal_cester_assert_eq</ref>(x,y,%li))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two long are the same. This macro prints out the actual values of the two long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2152" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a5f5309b143cb307bb113f173c065b011" prot="public" static="no">
        <name>cester_assert_long_ne</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_long, <ref refid="cester_8h_1aaf5de68fa3201fdd6dd999f120daba1b" kindref="member">__internal_cester_assert_ne</ref>(x,y,%li))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two long are not the same. This macro prints out the actual values of the two long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2162" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a84995d98090549323fcd7523fe181516" prot="public" static="no">
        <name>cester_assert_long_gt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_long, <ref refid="cester_8h_1a841683410a4864dec939ab2800f75917" kindref="member">__internal_cester_assert_gt</ref>(x,y,%li))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a long is greater than the other. This macro prints out the actual values of the two long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2172" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1abbedc0f39e01c2ac2cdf41c2f2de8e99" prot="public" static="no">
        <name>cester_assert_long_ge</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_long, <ref refid="cester_8h_1af4def7a0532353547c568c933d336ddf" kindref="member">__internal_cester_assert_ge</ref>(x,y,%li))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a long is greater than or equal to the other. This macro prints out the actual values of the two long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2182" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ad05bb24cbea2d77de13f0329237a1d08" prot="public" static="no">
        <name>cester_assert_long_lt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_long, <ref refid="cester_8h_1a8a726d858451d504fd00943bfffab57d" kindref="member">__internal_cester_assert_lt</ref>(x,y,%li))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a long is lesser than the other. This macro prints out the actual values of the two long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2192" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a207554490c0ffef0ffd353d028b18992" prot="public" static="no">
        <name>cester_assert_long_le</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_long, <ref refid="cester_8h_1ad78aca6b8298ac4b7ec0c21755f438dc" kindref="member">__internal_cester_assert_le</ref>(x,y,%li))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a long is lesser than or equal to the other. This macro prints out the actual values of the two long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2202" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1abfc9ad76a839cd0bf2e6aec159f1cbb2" prot="public" static="no">
        <name>cester_assert_cmp_ulong</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ulong, <ref refid="cester_8h_1a8b399ede50e1a5076e22eb94d6c0a4c7" kindref="member">__internal_cester_assert_cmp</ref>(w,x,y,z))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two unsigned long using the provided operator This macro prints out the actual values of the two unsigned long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>a unsigned long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the operator to use for the comparison. One of ==, !=, &lt;, &gt;, &lt;=, &gt;= </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the string formated for output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2214" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a99ef3c0a944e719e1dbebb2e3bcd7ab6" prot="public" static="no">
        <name>cester_assert_ulong_eq</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ulong, <ref refid="cester_8h_1a226f3f1f736c15413ea1ffd63c0f6a62" kindref="member">__internal_cester_assert_eq</ref>(x,y,%lu))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two unsigned long are the same. This macro prints out the actual values of the two unsigned long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a unsigned long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2224" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a053453595acd8314a6b0b6e6b1830237" prot="public" static="no">
        <name>cester_assert_ulong_ne</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ulong, <ref refid="cester_8h_1aaf5de68fa3201fdd6dd999f120daba1b" kindref="member">__internal_cester_assert_ne</ref>(x,y,%lu))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two unsigned long are not the same. This macro prints out the actual values of the two unsigned long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a unsigned long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2234" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a5cf545094f409ef0d934b974de19a420" prot="public" static="no">
        <name>cester_assert_ulong_gt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ulong, <ref refid="cester_8h_1a841683410a4864dec939ab2800f75917" kindref="member">__internal_cester_assert_gt</ref>(x,y,%lu))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a unsigned long is greater than the other. This macro prints out the actual values of the two unsigned long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a unsigned long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2244" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a30cb4e686fd334514a2aa47dd3dd32d7" prot="public" static="no">
        <name>cester_assert_ulong_ge</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ulong, <ref refid="cester_8h_1af4def7a0532353547c568c933d336ddf" kindref="member">__internal_cester_assert_ge</ref>(x,y,%lu))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a unsigned long is greater than or equal to the other. This macro prints out the actual values of the two unsigned long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a unsigned long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2254" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aa59eb446c84e46dea836f066b1c56b35" prot="public" static="no">
        <name>cester_assert_ulong_lt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ulong, <ref refid="cester_8h_1a8a726d858451d504fd00943bfffab57d" kindref="member">__internal_cester_assert_lt</ref>(x,y,%lu))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a unsigned long is lesser than the other. This macro prints out the actual values of the two unsigned long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a unsigned long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2264" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a97f6ad31275f449ecafc3a9ebb7a583a" prot="public" static="no">
        <name>cester_assert_ulong_le</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ulong, <ref refid="cester_8h_1ad78aca6b8298ac4b7ec0c21755f438dc" kindref="member">__internal_cester_assert_le</ref>(x,y,%lu))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a unsigned long is lesser than or equal to the other. This macro prints out the actual values of the two unsigned long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a unsigned long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2274" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a14e5f3331914ff5f34d8c38b1b11a11c" prot="public" static="no">
        <name>cester_assert_cmp_llong</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_llong, <ref refid="cester_8h_1a8b399ede50e1a5076e22eb94d6c0a4c7" kindref="member">__internal_cester_assert_cmp</ref>(w,x,y,z))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two long long using the provided operator This macro prints out the actual values of the two long long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>a long long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the operator to use for the comparison. One of ==, !=, &lt;, &gt;, &lt;=, &gt;= </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the string formated for output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2286" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a4cd8389ced21c71877654e581cb87a4e" prot="public" static="no">
        <name>cester_assert_llong_eq</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_llong, <ref refid="cester_8h_1a226f3f1f736c15413ea1ffd63c0f6a62" kindref="member">__internal_cester_assert_eq</ref>(x,y,%li))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two long long are the same. This macro prints out the actual values of the two long long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a long long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2297" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a116d39fcd31ec06da251ac8371e6d2ae" prot="public" static="no">
        <name>cester_assert_llong_ne</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_llong, <ref refid="cester_8h_1aaf5de68fa3201fdd6dd999f120daba1b" kindref="member">__internal_cester_assert_ne</ref>(x,y,%li))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two long long are not the same. This macro prints out the actual values of the two long long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a long long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2311" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ad8fe59ecd1080a3e4ace88272ed6e533" prot="public" static="no">
        <name>cester_assert_llong_gt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_llong, <ref refid="cester_8h_1a841683410a4864dec939ab2800f75917" kindref="member">__internal_cester_assert_gt</ref>(x,y,%li))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a long long is greater than the other. This macro prints out the actual values of the two long long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a long long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2325" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ae44aec235e1133fd72eaf4e192fe49e3" prot="public" static="no">
        <name>cester_assert_llong_ge</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_llong, <ref refid="cester_8h_1af4def7a0532353547c568c933d336ddf" kindref="member">__internal_cester_assert_ge</ref>(x,y,%li))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a long long is greater than or equal to the other. This macro prints out the actual values of the two long long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a long long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2339" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ac68f8322b26a16504aa7fb898f214ba9" prot="public" static="no">
        <name>cester_assert_llong_lt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_llong, <ref refid="cester_8h_1a8a726d858451d504fd00943bfffab57d" kindref="member">__internal_cester_assert_lt</ref>(x,y,%li))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a long long is lesser than the other. This macro prints out the actual values of the two long long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a long long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2353" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1af60e2018832e7bafc6770a156c060e1e" prot="public" static="no">
        <name>cester_assert_llong_le</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_llong, <ref refid="cester_8h_1af4def7a0532353547c568c933d336ddf" kindref="member">__internal_cester_assert_ge</ref>(x,y,%li))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a long long is lesser than or equal to the other. This macro prints out the actual values of the two long long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a long long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2367" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a4d77d0e52b569f064961cac86ce4522a" prot="public" static="no">
        <name>cester_assert_cmp_ullong</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ullong, <ref refid="cester_8h_1a8b399ede50e1a5076e22eb94d6c0a4c7" kindref="member">__internal_cester_assert_cmp</ref>(w,x,y,z))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two unsigned long long using the provided operator This macro prints out the actual values of the two unsigned long long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>a unsigned long long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the operator to use for the comparison. One of ==, !=, &lt;, &gt;, &lt;=, &gt;= </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned long long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the string formated for output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2382" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a87a42eff8574ed657afe15e1c067b8d9" prot="public" static="no">
        <name>cester_assert_ullong_eq</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ullong, <ref refid="cester_8h_1a226f3f1f736c15413ea1ffd63c0f6a62" kindref="member">__internal_cester_assert_eq</ref>(x,y,%llu))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two unsigned long long are the same. This macro prints out the actual values of the two unsigned long long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a unsigned long long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned long long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2392" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1adb1e8e3ff2886d6cf3241c74ae384a84" prot="public" static="no">
        <name>cester_assert_ullong_ne</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ullong, <ref refid="cester_8h_1aaf5de68fa3201fdd6dd999f120daba1b" kindref="member">__internal_cester_assert_ne</ref>(x,y,%llu))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two unsigned long long are not the same. This macro prints out the actual values of the two unsigned long long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a unsigned long long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned long long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2402" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a8553f6344b1d9be085acfe264a8e4216" prot="public" static="no">
        <name>cester_assert_ullong_gt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ullong, <ref refid="cester_8h_1a841683410a4864dec939ab2800f75917" kindref="member">__internal_cester_assert_gt</ref>(x,y,%llu))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a unsigned long long is greater than the other. This macro prints out the actual values of the two unsigned long long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a unsigned long long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned long long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2412" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a2cb86a8fabcc70632d49b0846c47e52e" prot="public" static="no">
        <name>cester_assert_ullong_ge</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ullong, <ref refid="cester_8h_1af4def7a0532353547c568c933d336ddf" kindref="member">__internal_cester_assert_ge</ref>(x,y,%llu))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a unsigned long long is greater than or equal to the other. This macro prints out the actual values of the two unsigned long long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a unsigned long long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned long long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2422" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a3ab36a05984935abd5f48ffbc27b9a27" prot="public" static="no">
        <name>cester_assert_ullong_lt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ullong, <ref refid="cester_8h_1a8a726d858451d504fd00943bfffab57d" kindref="member">__internal_cester_assert_lt</ref>(x,y,%llu))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a unsigned long long is lesser than the other. This macro prints out the actual values of the two unsigned long long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a unsigned long long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned long long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2432" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a17d1d31a8af45d28b96b48aec7e08dc9" prot="public" static="no">
        <name>cester_assert_ullong_le</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ullong, <ref refid="cester_8h_1ad78aca6b8298ac4b7ec0c21755f438dc" kindref="member">__internal_cester_assert_le</ref>(x,y,%llu))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a unsigned long long is lesser than or equal to the other. This macro prints out the actual values of the two unsigned long long.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a unsigned long long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another unsigned long long </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2442" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a4ffcc4ceef640c1e33088f242dbf2334" prot="public" static="no">
        <name>cester_assert_cmp_float</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_float, <ref refid="cester_8h_1a8b399ede50e1a5076e22eb94d6c0a4c7" kindref="member">__internal_cester_assert_cmp</ref>(w,x,y,z))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two float using the provided operator This macro prints out the actual values of the two float.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>a float </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the operator to use for the comparison. One of ==, !=, &lt;, &gt;, &lt;=, &gt;= </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another float </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the string formated for output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2454" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a9f3c6601356e77880498bc9aa00533bb" prot="public" static="no">
        <name>cester_assert_float_eq</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_float, <ref refid="cester_8h_1a226f3f1f736c15413ea1ffd63c0f6a62" kindref="member">__internal_cester_assert_eq</ref>(x,y,%f))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two float are the same. This macro prints out the actual values of the two float.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a float </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another float </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2464" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a43b716e83b2465045255003807979c0d" prot="public" static="no">
        <name>cester_assert_float_ne</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_float, <ref refid="cester_8h_1aaf5de68fa3201fdd6dd999f120daba1b" kindref="member">__internal_cester_assert_ne</ref>(x,y,%f))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two float are not the same. This macro prints out the actual values of the two float.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a float </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another float </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2474" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a38be61413b0e3751d420364cda5437f4" prot="public" static="no">
        <name>cester_assert_float_gt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_float, <ref refid="cester_8h_1a841683410a4864dec939ab2800f75917" kindref="member">__internal_cester_assert_gt</ref>(x,y,%f))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a float is greater than the other. This macro prints out the actual values of the two float.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a float </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another float </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2484" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a04cea430d6d62f8d7827519e9d073da3" prot="public" static="no">
        <name>cester_assert_float_ge</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_float, <ref refid="cester_8h_1af4def7a0532353547c568c933d336ddf" kindref="member">__internal_cester_assert_ge</ref>(x,y,%f))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a float is greater than or equal to the other. This macro prints out the actual values of the two float.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a float </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another float </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2494" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a3f59d6394a08b8344f4c971c56244473" prot="public" static="no">
        <name>cester_assert_float_lt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_float, <ref refid="cester_8h_1a8a726d858451d504fd00943bfffab57d" kindref="member">__internal_cester_assert_lt</ref>(x,y,%f))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a float is lesser than the other. This macro prints out the actual values of the two float.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a float </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another float </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2504" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aa94f8c258ea1622486a67f667e63cc0d" prot="public" static="no">
        <name>cester_assert_float_le</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_float, <ref refid="cester_8h_1ad78aca6b8298ac4b7ec0c21755f438dc" kindref="member">__internal_cester_assert_le</ref>(x,y,%f))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a float is lesser than or equal to the other. This macro prints out the actual values of the two float.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a float </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another float </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2514" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2514" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a3cb7764bfbbcef812ac2bf44508ed071" prot="public" static="no">
        <name>cester_assert_cmp_double</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_double, <ref refid="cester_8h_1a8b399ede50e1a5076e22eb94d6c0a4c7" kindref="member">__internal_cester_assert_cmp</ref>(w,x,y,z))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two double using the provided operator This macro prints out the actual values of the two double.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>a double </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the operator to use for the comparison. One of ==, !=, &lt;, &gt;, &lt;=, &gt;= </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another double </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the string formated for output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2526" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2526" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a3ff4a9b221a7aa7b467759ac22a9ac50" prot="public" static="no">
        <name>cester_assert_double_eq</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_double, <ref refid="cester_8h_1a226f3f1f736c15413ea1ffd63c0f6a62" kindref="member">__internal_cester_assert_eq</ref>(x,y,%lf))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two double are the same. This macro prints out the actual values of the two double.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a double </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another double </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2536" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2536" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a2e1e124b184f4343db0391d96d047a8c" prot="public" static="no">
        <name>cester_assert_double_ne</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_double, <ref refid="cester_8h_1aaf5de68fa3201fdd6dd999f120daba1b" kindref="member">__internal_cester_assert_ne</ref>(x,y,%lf))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two double are not the same. This macro prints out the actual values of the two double.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a double </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another double </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2546" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2546" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a051ae7fe023a449911e014eec0be8b43" prot="public" static="no">
        <name>cester_assert_double_gt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_double, <ref refid="cester_8h_1a841683410a4864dec939ab2800f75917" kindref="member">__internal_cester_assert_gt</ref>(x,y,%lf))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a double is greater than the other. This macro prints out the actual values of the two double.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a double </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another double </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2556" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2556" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a6afe3c7a9b80ec1f0fe1adbd90e32ef6" prot="public" static="no">
        <name>cester_assert_double_ge</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_double, <ref refid="cester_8h_1af4def7a0532353547c568c933d336ddf" kindref="member">__internal_cester_assert_ge</ref>(x,y,%lf))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a double is greater than or equal to the other. This macro prints out the actual values of the two double.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a double </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another double </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2566" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a4f58a52102f9e379e278ba2ed3cb75ac" prot="public" static="no">
        <name>cester_assert_double_lt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_double, <ref refid="cester_8h_1a8a726d858451d504fd00943bfffab57d" kindref="member">__internal_cester_assert_lt</ref>(x,y,%lf))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a double is lesser than the other. This macro prints out the actual values of the two double.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a double </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another double </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2576" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a36725370809ccd07d19bfe6712159421" prot="public" static="no">
        <name>cester_assert_double_le</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_double, <ref refid="cester_8h_1ad78aca6b8298ac4b7ec0c21755f438dc" kindref="member">__internal_cester_assert_le</ref>(x,y,%lf))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a double is lesser than or equal to the other. This macro prints out the actual values of the two double.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a double </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another double </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2586" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2586" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1abd1ba80a37b61ecdc4e69f53e8066604" prot="public" static="no">
        <name>cester_assert_cmp_ldouble</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ldouble, <ref refid="cester_8h_1a8b399ede50e1a5076e22eb94d6c0a4c7" kindref="member">__internal_cester_assert_cmp</ref>(w,x,y,z))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two long double using the provided operator This macro prints out the actual values of the two long double.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>a long double </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the operator to use for the comparison. One of ==, !=, &lt;, &gt;, &lt;=, &gt;= </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long double </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the string formated for output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2598" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2598" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a195587a0052933c4ecbc090d27219fea" prot="public" static="no">
        <name>cester_assert_ldouble_eq</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ldouble, <ref refid="cester_8h_1a226f3f1f736c15413ea1ffd63c0f6a62" kindref="member">__internal_cester_assert_eq</ref>(x,y,%e))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two long double are the same. This macro prints out the actual values of the two long double.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a long double </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long double </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2608" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2608" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a178d5e9d2d06bd85a964458f008c7bdf" prot="public" static="no">
        <name>cester_assert_ldouble_ne</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ldouble, <ref refid="cester_8h_1aaf5de68fa3201fdd6dd999f120daba1b" kindref="member">__internal_cester_assert_ne</ref>(x,y,%e))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the two long double are not the same. This macro prints out the actual values of the two long double.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a long double </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long double </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2618" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2618" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a145ecd50d87773dd60a4feccbb927ff0" prot="public" static="no">
        <name>cester_assert_ldouble_gt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ldouble, <ref refid="cester_8h_1a841683410a4864dec939ab2800f75917" kindref="member">__internal_cester_assert_gt</ref>(x,y,%e))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a long double is greater than the other. This macro prints out the actual values of the two long double.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a long double </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long double </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2628" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2628" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aa8f260074ddd738f9a3cb38f7a135a22" prot="public" static="no">
        <name>cester_assert_ldouble_ge</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ldouble, <ref refid="cester_8h_1af4def7a0532353547c568c933d336ddf" kindref="member">__internal_cester_assert_ge</ref>(x,y,%e))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a long double is greater than or equal to the other. This macro prints out the actual values of the two long double.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a long double </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long double </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2638" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2638" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a34c763f93991f0f9b552e4e0214d33e2" prot="public" static="no">
        <name>cester_assert_ldouble_lt</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ldouble, <ref refid="cester_8h_1a8a726d858451d504fd00943bfffab57d" kindref="member">__internal_cester_assert_lt</ref>(x,y,%e))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a long double is lesser than the other. This macro prints out the actual values of the two long double.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a long double </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long double </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2648" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2648" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1af5fe0fc17f2db97d8d077f3e7fa06e75" prot="public" static="no">
        <name>cester_assert_ldouble_le</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="cester_8h_1ac63c535f180a00d4a8a3f9d970486a1d" kindref="member">CESTER_CONCAT</ref>(cester_compare_ldouble, <ref refid="cester_8h_1ad78aca6b8298ac4b7ec0c21755f438dc" kindref="member">__internal_cester_assert_le</ref>(x,y,%e))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the a long double is lesser than or equal to the other. This macro prints out the actual values of the two long double.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a long double </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>another long double </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2658" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2658" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a4681c51ac1793cf49a7d90fac6eabe74" prot="public" static="no">
        <name>CESTER_TEST</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>static void cester_test_##x(<ref refid="cester_8h_1abfd2a6d8c09aa2c747f283a947084609" kindref="member">TestInstance</ref>* y);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a test case, this uses the first arguments as the test case name and identifier and the body of the test. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2830" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3078" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a640ae0718e58ff4acc98c439dddf0add" prot="public" static="no">
        <name>CESTER_TODO_TEST</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>static void cester_test_##x(<ref refid="cester_8h_1abfd2a6d8c09aa2c747f283a947084609" kindref="member">TestInstance</ref>* y);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a test case that has not been implemented, It is skipped and generates warning. This macro will print message in output to remind the developer of it implementation. Good for TDD.</para><para>This uses the first arguments as the test case name and identifier and the body of the test. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2840" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3079" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1acbfb07e5d4ec3ad1e02f558eefe57e18" prot="public" static="no">
        <name>CESTER_SKIP_TEST</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>static void cester_test_##x(<ref refid="cester_8h_1abfd2a6d8c09aa2c747f283a947084609" kindref="member">TestInstance</ref>* y);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a test case that is not run.</para><para>This uses the first arguments as the test case name and identifier and the body of the test. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2848" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3080" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ab298b9c7cd9ca180902d0b4706aa7003" prot="public" static="no">
        <name>CESTER_BEFORE_ALL</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>void cester_before_all_test(<ref refid="cester_8h_1abfd2a6d8c09aa2c747f283a947084609" kindref="member">TestInstance</ref>* x);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function that would be invoked once before running any test in the test file. You can only have one of this function in a test file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2855" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3081" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aa9c76afd70ec4712ab684fc76eda64f9" prot="public" static="no">
        <name>CESTER_BEFORE_EACH</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>void cester_before_each_test(<ref refid="cester_8h_1abfd2a6d8c09aa2c747f283a947084609" kindref="member">TestInstance</ref>* w, char * const x, unsigned y);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function that would be invoked before each test. You can only have one of this function in a test file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2861" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3082" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a48332e850b348b1b1b5717a5da05eb1d" prot="public" static="no">
        <name>CESTER_AFTER_ALL</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>void cester_after_all_test(<ref refid="cester_8h_1abfd2a6d8c09aa2c747f283a947084609" kindref="member">TestInstance</ref>* x);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function that would be invoked once after running all the tests in the test file. You can only have one of this function in a test file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2868" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3083" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a6e5096c3c7b5f3dd5f853d3ee2d6b235" prot="public" static="no">
        <name>CESTER_AFTER_EACH</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>void cester_after_each_test(<ref refid="cester_8h_1abfd2a6d8c09aa2c747f283a947084609" kindref="member">TestInstance</ref>* w, char * const x, unsigned y);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The functions that would be invoked after each test is ran. You can only have one of this function in a test file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2874" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3084" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ad2920057513f349bbb4b5461a410d718" prot="public" static="no">
        <name>CESTER_OPTIONS</name>
        <param><defname>x</defname></param>
        <initializer>void cester_options_before_main();</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the options for cester, anything in this macro will be executed before the tests starts running. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2880" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3085" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1af6fdfc1a7963f6b2bf1196a5d75ceeec" prot="public" static="no">
        <name>CESTER_BODY</name>
        <param><defname>x</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Absorb the statements and logic in a test file before re including the <bold>BASE_FILE</bold>. This way code can be written in the global space of the test file.</para><para><simplesect kind="note"><para>do not put other CESTER_ macros inside this one, this should contain only your C or C++ code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2890" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3086" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aadb3f12517f4d0ec821ff3173a0b9d44" prot="public" static="no">
        <name>CESTER_COMMENT</name>
        <param><defname>x</defname></param>
        <initializer>void cester_test_file_comment_function();</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A multiline comment macro everything in the macro is printed out at the beginning of the test.</para><para>Comma in the content will cause issue in the macro expansion when the code is compiled with C version less than C99.</para><para>It should not begin or end in quote, escape characters is expanded when printed out </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2902" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3087" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aaa498d9e9f601d5b584f702ee592e4d9" prot="public" static="no">
        <name>CESTER_MOCK_SIMPLE_FUNCTION</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>__attribute__((weak)) y x; y __real_##x;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mock a function to just return a value. the first argument is the name of the function to mock, the second argument is the return type of the function, the third parameter is the value that is returned when the function is called.</para><para>This still requires using the -Wl,<ndash/>wrap option to wrap the parameter to override the initial function. E.g. if the function <computeroutput>multiply_by</computeroutput> is mocked the option <computeroutput>-Wl,--wrap=multiply_by</computeroutput> should be added during compilation.</para><para>Th mocking features only works on GCC for now. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2918" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3089" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a8a6a76440950a47f00c288af35260b8f" prot="public" static="no">
        <name>CESTER_MOCK_FUNCTION</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>__attribute__((weak)) y x; extern y __real_##x;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2923" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3090" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a4681c51ac1793cf49a7d90fac6eabe74" prot="public" static="no">
        <name>CESTER_TEST</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>{ <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a64d06d0e4b203370998b22f6d5bf9b6c" kindref="member">CESTER_RESULT_UNKNOWN</ref>, __LINE__, <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a2d2cd6b7d1d88a8d8e74cf5578ff128d" kindref="member">CESTER_RESULT_SUCCESS</ref>, 0.000, 0.000, (char*) &quot;&quot;, (char*) #x, (cester_test_##x), NULL, NULL, <ref refid="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a4c6ccc8da2c763d8adc49f909c036b21" kindref="member">CESTER_NORMAL_TEST</ref> },</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a test case, this uses the first arguments as the test case name and identifier and the body of the test. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3002" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3078" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a640ae0718e58ff4acc98c439dddf0add" prot="public" static="no">
        <name>CESTER_TODO_TEST</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>{ <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a64d06d0e4b203370998b22f6d5bf9b6c" kindref="member">CESTER_RESULT_UNKNOWN</ref>, __LINE__, <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a2d2cd6b7d1d88a8d8e74cf5578ff128d" kindref="member">CESTER_RESULT_SUCCESS</ref>, 0.000, 0.000, (char*) &quot;&quot;, (char*) #x, (cester_test_##x), NULL, NULL, <ref refid="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a4580ff0d5e0421e5314ba686ebfc6be5" kindref="member">CESTER_NORMAL_TODO_TEST</ref> },</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a test case that has not been implemented, It is skipped and generates warning. This macro will print message in output to remind the developer of it implementation. Good for TDD.</para><para>This uses the first arguments as the test case name and identifier and the body of the test. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3003" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3079" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1acbfb07e5d4ec3ad1e02f558eefe57e18" prot="public" static="no">
        <name>CESTER_SKIP_TEST</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>{ <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a64d06d0e4b203370998b22f6d5bf9b6c" kindref="member">CESTER_RESULT_UNKNOWN</ref>, __LINE__, <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a2d2cd6b7d1d88a8d8e74cf5578ff128d" kindref="member">CESTER_RESULT_SUCCESS</ref>, 0.000, 0.000, (char*) &quot;&quot;, (char*) #x, (cester_test_##x), NULL, NULL, <ref refid="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a6907852b88f43904379b31e0b21d9644" kindref="member">CESTER_NORMAL_SKIP_TEST</ref> },</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a test case that is not run.</para><para>This uses the first arguments as the test case name and identifier and the body of the test. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3004" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3080" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ab298b9c7cd9ca180902d0b4706aa7003" prot="public" static="no">
        <name>CESTER_BEFORE_ALL</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>{ <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a64d06d0e4b203370998b22f6d5bf9b6c" kindref="member">CESTER_RESULT_UNKNOWN</ref>, __LINE__, <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a2d2cd6b7d1d88a8d8e74cf5578ff128d" kindref="member">CESTER_RESULT_SUCCESS</ref>, 0.000, 0.000, (char*) &quot;&quot;, (char*) &quot;cester_before_all_test&quot;, (cester_before_all_test), NULL, NULL, <ref refid="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a4358176c383ca80e5b713687907633a6" kindref="member">CESTER_BEFORE_ALL_TEST</ref> },</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function that would be invoked once before running any test in the test file. You can only have one of this function in a test file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3005" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3081" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aa9c76afd70ec4712ab684fc76eda64f9" prot="public" static="no">
        <name>CESTER_BEFORE_EACH</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>{ <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a64d06d0e4b203370998b22f6d5bf9b6c" kindref="member">CESTER_RESULT_UNKNOWN</ref>, __LINE__, <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a2d2cd6b7d1d88a8d8e74cf5578ff128d" kindref="member">CESTER_RESULT_SUCCESS</ref>, 0.000, 0.000, (char*) (char*) &quot;&quot;, (char*) &quot;cester_before_each_test&quot;, NULL, (cester_before_each_test), NULL, <ref refid="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81ad278ec99fbd7edd505e7c9c1eabd2419" kindref="member">CESTER_BEFORE_EACH_TEST</ref> },</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function that would be invoked before each test. You can only have one of this function in a test file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3006" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3082" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a48332e850b348b1b1b5717a5da05eb1d" prot="public" static="no">
        <name>CESTER_AFTER_ALL</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>{ <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a64d06d0e4b203370998b22f6d5bf9b6c" kindref="member">CESTER_RESULT_UNKNOWN</ref>, __LINE__, <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a2d2cd6b7d1d88a8d8e74cf5578ff128d" kindref="member">CESTER_RESULT_SUCCESS</ref>, 0.000, 0.000, (char*) &quot;&quot;, (char*) &quot;cester_after_all_test&quot;, (cester_after_all_test), NULL, NULL, <ref refid="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a58ac3fc8c71100848235437bc1fb49d1" kindref="member">CESTER_AFTER_ALL_TEST</ref> },</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function that would be invoked once after running all the tests in the test file. You can only have one of this function in a test file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3007" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3083" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a6e5096c3c7b5f3dd5f853d3ee2d6b235" prot="public" static="no">
        <name>CESTER_AFTER_EACH</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>{ <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a64d06d0e4b203370998b22f6d5bf9b6c" kindref="member">CESTER_RESULT_UNKNOWN</ref>, __LINE__, <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a2d2cd6b7d1d88a8d8e74cf5578ff128d" kindref="member">CESTER_RESULT_SUCCESS</ref>, 0.000, 0.000, (char*) &quot;&quot;, (char*) &quot;cester_after_each_test&quot;, NULL, (cester_after_each_test), NULL, <ref refid="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a3591c4344db24010356c4b68be130984" kindref="member">CESTER_AFTER_EACH_TEST</ref> },</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The functions that would be invoked after each test is ran. You can only have one of this function in a test file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3008" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3084" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ad2920057513f349bbb4b5461a410d718" prot="public" static="no">
        <name>CESTER_OPTIONS</name>
        <param><defname>x</defname></param>
        <initializer>{ <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a64d06d0e4b203370998b22f6d5bf9b6c" kindref="member">CESTER_RESULT_UNKNOWN</ref>, __LINE__, <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a2d2cd6b7d1d88a8d8e74cf5578ff128d" kindref="member">CESTER_RESULT_SUCCESS</ref>, 0.000, 0.000, (char*) &quot;&quot;, (char*) &quot;cester_options_before_main&quot;, NULL, NULL, (cester_options_before_main), <ref refid="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a486668eab9d218bdceb3ec4435d59d3f" kindref="member">CESTER_OPTIONS_FUNCTION</ref> },</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the options for cester, anything in this macro will be executed before the tests starts running. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3009" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3085" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aadb3f12517f4d0ec821ff3173a0b9d44" prot="public" static="no">
        <name>CESTER_COMMENT</name>
        <param><defname>x</defname></param>
        <initializer>{ <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a64d06d0e4b203370998b22f6d5bf9b6c" kindref="member">CESTER_RESULT_UNKNOWN</ref>, __LINE__, <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a2d2cd6b7d1d88a8d8e74cf5578ff128d" kindref="member">CESTER_RESULT_SUCCESS</ref>, 0.000, 0.000, (char*) &quot;&quot;, (char*) &quot;cester_test_file_comment_function&quot;, NULL, NULL, (cester_test_file_comment_function), <ref refid="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81aab46343fb2c77645e1a80b7d5dc8166a" kindref="member">CESTER_TEST_FILE_COMMENT</ref> },</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A multiline comment macro everything in the macro is printed out at the beginning of the test.</para><para>Comma in the content will cause issue in the macro expansion when the code is compiled with C version less than C99.</para><para>It should not begin or end in quote, escape characters is expanded when printed out </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3010" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3087" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1af6fdfc1a7963f6b2bf1196a5d75ceeec" prot="public" static="no">
        <name>CESTER_BODY</name>
        <param><defname>x</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Absorb the statements and logic in a test file before re including the <bold>BASE_FILE</bold>. This way code can be written in the global space of the test file.</para><para><simplesect kind="note"><para>do not put other CESTER_ macros inside this one, this should contain only your C or C++ code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3022" column="10" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3086" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aaa498d9e9f601d5b584f702ee592e4d9" prot="public" static="no">
        <name>CESTER_MOCK_SIMPLE_FUNCTION</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mock a function to just return a value. the first argument is the name of the function to mock, the second argument is the return type of the function, the third parameter is the value that is returned when the function is called.</para><para>This still requires using the -Wl,<ndash/>wrap option to wrap the parameter to override the initial function. E.g. if the function <computeroutput>multiply_by</computeroutput> is mocked the option <computeroutput>-Wl,--wrap=multiply_by</computeroutput> should be added during compilation.</para><para>Th mocking features only works on GCC for now. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3023" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3089" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a8a6a76440950a47f00c288af35260b8f" prot="public" static="no">
        <name>CESTER_MOCK_FUNCTION</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3024" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3090" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a4681c51ac1793cf49a7d90fac6eabe74" prot="public" static="no">
        <name>CESTER_TEST</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>static void cester_test_##x(<ref refid="cester_8h_1abfd2a6d8c09aa2c747f283a947084609" kindref="member">TestInstance</ref>* y) { z }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a test case, this uses the first arguments as the test case name and identifier and the body of the test. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3078" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3078" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a640ae0718e58ff4acc98c439dddf0add" prot="public" static="no">
        <name>CESTER_TODO_TEST</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>static void cester_test_##x(<ref refid="cester_8h_1abfd2a6d8c09aa2c747f283a947084609" kindref="member">TestInstance</ref>* y) { z }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a test case that has not been implemented, It is skipped and generates warning. This macro will print message in output to remind the developer of it implementation. Good for TDD.</para><para>This uses the first arguments as the test case name and identifier and the body of the test. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3079" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3079" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1acbfb07e5d4ec3ad1e02f558eefe57e18" prot="public" static="no">
        <name>CESTER_SKIP_TEST</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>static void cester_test_##x(<ref refid="cester_8h_1abfd2a6d8c09aa2c747f283a947084609" kindref="member">TestInstance</ref>* y) { z }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a test case that is not run.</para><para>This uses the first arguments as the test case name and identifier and the body of the test. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3080" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3080" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ab298b9c7cd9ca180902d0b4706aa7003" prot="public" static="no">
        <name>CESTER_BEFORE_ALL</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>void cester_before_all_test(<ref refid="cester_8h_1abfd2a6d8c09aa2c747f283a947084609" kindref="member">TestInstance</ref>* x) { y <ref refid="cester_8h_1a35fbc3061ecdc188a0d412b9dbb987ca" kindref="member">CESTER_NO_ISOLATION</ref>(); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function that would be invoked once before running any test in the test file. You can only have one of this function in a test file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3081" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3081" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aa9c76afd70ec4712ab684fc76eda64f9" prot="public" static="no">
        <name>CESTER_BEFORE_EACH</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>void cester_before_each_test(<ref refid="cester_8h_1abfd2a6d8c09aa2c747f283a947084609" kindref="member">TestInstance</ref>* w, char * const x, unsigned y) { z <ref refid="cester_8h_1a35fbc3061ecdc188a0d412b9dbb987ca" kindref="member">CESTER_NO_ISOLATION</ref>(); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function that would be invoked before each test. You can only have one of this function in a test file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3082" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3082" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a48332e850b348b1b1b5717a5da05eb1d" prot="public" static="no">
        <name>CESTER_AFTER_ALL</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>void cester_after_all_test(<ref refid="cester_8h_1abfd2a6d8c09aa2c747f283a947084609" kindref="member">TestInstance</ref>* x) { y <ref refid="cester_8h_1a35fbc3061ecdc188a0d412b9dbb987ca" kindref="member">CESTER_NO_ISOLATION</ref>(); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function that would be invoked once after running all the tests in the test file. You can only have one of this function in a test file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3083" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3083" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a6e5096c3c7b5f3dd5f853d3ee2d6b235" prot="public" static="no">
        <name>CESTER_AFTER_EACH</name>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>void cester_after_each_test(<ref refid="cester_8h_1abfd2a6d8c09aa2c747f283a947084609" kindref="member">TestInstance</ref>* w, char * const x, unsigned y) { z <ref refid="cester_8h_1a35fbc3061ecdc188a0d412b9dbb987ca" kindref="member">CESTER_NO_ISOLATION</ref>(); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The functions that would be invoked after each test is ran. You can only have one of this function in a test file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3084" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3084" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ad2920057513f349bbb4b5461a410d718" prot="public" static="no">
        <name>CESTER_OPTIONS</name>
        <param><defname>x</defname></param>
        <initializer>void cester_options_before_main() { x }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the options for cester, anything in this macro will be executed before the tests starts running. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3085" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3085" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1af6fdfc1a7963f6b2bf1196a5d75ceeec" prot="public" static="no">
        <name>CESTER_BODY</name>
        <param><defname>x</defname></param>
        <initializer>x</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Absorb the statements and logic in a test file before re including the <bold>BASE_FILE</bold>. This way code can be written in the global space of the test file.</para><para><simplesect kind="note"><para>do not put other CESTER_ macros inside this one, this should contain only your C or C++ code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3086" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3086" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aadb3f12517f4d0ec821ff3173a0b9d44" prot="public" static="no">
        <name>CESTER_COMMENT</name>
        <param><defname>x</defname></param>
        <initializer>void cester_test_file_comment_function() { if (cester_string_equals(superTestInstance.output_format, (char*) &quot;text&quot;) == 1) { CESTER_DELEGATE_FPRINT_STR((<ref refid="cester_8h_1af052f00f77d318e4ceb4c5240dabf2e8" kindref="member">default_color</ref>), &quot;\n&quot;); CESTER_DELEGATE_FPRINT_STR((<ref refid="cester_8h_1af052f00f77d318e4ceb4c5240dabf2e8" kindref="member">default_color</ref>), #x); <ref refid="cester_8h_1aa2f0945a8d64168b5bb52c074e58988c" kindref="member">CESTER_DELEGATE_FPRINT_STR</ref>((<ref refid="cester_8h_1af052f00f77d318e4ceb4c5240dabf2e8" kindref="member">default_color</ref>), &quot;\n&quot;); } }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A multiline comment macro everything in the macro is printed out at the beginning of the test.</para><para>Comma in the content will cause issue in the macro expansion when the code is compiled with C version less than C99.</para><para>It should not begin or end in quote, escape characters is expanded when printed out </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3087" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3087" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aaa498d9e9f601d5b584f702ee592e4d9" prot="public" static="no">
        <name>CESTER_MOCK_SIMPLE_FUNCTION</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>y __wrap_##x { return z; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mock a function to just return a value. the first argument is the name of the function to mock, the second argument is the return type of the function, the third parameter is the value that is returned when the function is called.</para><para>This still requires using the -Wl,<ndash/>wrap option to wrap the parameter to override the initial function. E.g. if the function <computeroutput>multiply_by</computeroutput> is mocked the option <computeroutput>-Wl,--wrap=multiply_by</computeroutput> should be added during compilation.</para><para>Th mocking features only works on GCC for now. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3089" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3089" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a8a6a76440950a47f00c288af35260b8f" prot="public" static="no">
        <name>CESTER_MOCK_FUNCTION</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>y __wrap_##x { z }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3090" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3090" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a5d12fa79c77dfe56918e813950e1b96e" prot="public" static="no">
        <name>CESTER_REGISTER_TEST</name>
        <param><defname>x</defname></param>
        <initializer>cester_register_test((char*)#x, (cester_test_##x), NULL, NULL, __LINE__, <ref refid="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a4c6ccc8da2c763d8adc49f909c036b21" kindref="member">CESTER_NORMAL_TEST</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Manually register a test case in situation where the the test are not auto detected or selected test cases want to be run.</para><para>If a test is registered manually all auto detected test will not be executed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3104" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a37c279dfc8428e9e1715d34c4d0dc569" prot="public" static="no">
        <name>CESTER_REGISTER_SKIP_TEST</name>
        <param><defname>x</defname></param>
        <initializer>cester_register_test((char*)#x, (cester_test_##x), NULL, NULL, __LINE__, <ref refid="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a6907852b88f43904379b31e0b21d9644" kindref="member">CESTER_NORMAL_SKIP_TEST</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Manually register a test case as a skip test which cases the test case not to run but it will be reported in result and logged under skipped tests.</para><para>Reason for skipping a test can be unavailability of resources or any other reason. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3113" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a676ef09dba3af00d6360dfae5e681330" prot="public" static="no">
        <name>CESTER_REGISTER_TODO_TEST</name>
        <param><defname>x</defname></param>
        <initializer>cester_register_test((char*)#x, (cester_test_##x), NULL, NULL, __LINE__, <ref refid="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a4580ff0d5e0421e5314ba686ebfc6be5" kindref="member">CESTER_NORMAL_TODO_TEST</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Manually register a test case that is yet to be implemented so it will be skipped but it will be reported in result and logged under todo tests. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3119" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a8d56a74ebcf0cb695124252f86e19cee" prot="public" static="no">
        <name>CESTER_REGISTER_BEFORE_ALL</name>
        <param></param>
        <initializer>cester_register_test(&quot;cester_before_all_test&quot;, (cester_before_all_test), NULL, NULL, __LINE__, <ref refid="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a4358176c383ca80e5b713687907633a6" kindref="member">CESTER_BEFORE_ALL_TEST</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Manually notify cester to execute the BEFORE_ALL function to execute before all the test case are run. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3125" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a0b62f335ebd2cb771791e3ede02d8982" prot="public" static="no">
        <name>CESTER_REGISTER_BEFORE_EACH</name>
        <param></param>
        <initializer>cester_register_test(&quot;cester_before_each_test&quot;, NULL, (cester_before_each_test), NULL, __LINE__, <ref refid="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81ad278ec99fbd7edd505e7c9c1eabd2419" kindref="member">CESTER_BEFORE_EACH_TEST</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Manually notify cester to execute the BEFORE_EACH function to execute every time before a test case is run. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3131" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ae9e08d0b24a10dd23a8d8714cf808a48" prot="public" static="no">
        <name>CESTER_REGISTER_AFTER_ALL</name>
        <param></param>
        <initializer>cester_register_test(&quot;cester_after_all_test&quot;, (cester_after_all_test), NULL, NULL, __LINE__, <ref refid="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a58ac3fc8c71100848235437bc1fb49d1" kindref="member">CESTER_AFTER_ALL_TEST</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Manually notify cester to execute the AFTER_ALL function to execute after all the test case are run. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3137" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a3bb3e8a71f0708741d30ea09a4e6e5e5" prot="public" static="no">
        <name>CESTER_REGISTER_AFTER_EACH</name>
        <param></param>
        <initializer>cester_register_test(&quot;cester_after_each_test&quot;, NULL, (cester_after_each_test), NULL, __LINE__, <ref refid="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a3591c4344db24010356c4b68be130984" kindref="member">CESTER_AFTER_EACH_TEST</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Manually notify cester to execute the AFTER_EACH function to execute every time after a test case is run. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3143" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1ac8cdd14cb932cee08dc68fcb3bbb41e7" prot="public" static="no">
        <name>CESTER_REGISTER_OPTIONS</name>
        <param></param>
        <initializer>cester_register_test(&quot;cester_options_before_main&quot;, NULL, NULL, (cester_options_before_main), __LINE__, <ref refid="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a486668eab9d218bdceb3ec4435d59d3f" kindref="member">CESTER_OPTIONS_FUNCTION</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Manually notify cester to execute the CESTER_OPTIONS block before running the tests. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3149" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a7e8ab4d8f4dc2a64f061e8166fe331ce" prot="public" static="no">
        <name>CESTER_REGISTER_COMMENT</name>
        <param></param>
        <initializer>cester_register_test(&quot;cester_test_file_comment_function&quot;, NULL, NULL, (cester_test_file_comment_function), __LINE__, <ref refid="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a486668eab9d218bdceb3ec4435d59d3f" kindref="member">CESTER_OPTIONS_FUNCTION</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Manually notify cester to print the CESTER_COMMENT content before running the tests. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3155" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1aac2231402f3558f6cc17f1be6ac5da99" prot="public" static="no">
        <name>CESTER_TEST_SHOULD</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>cester_expected_test_result(#x, y);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the expected result of a test case.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the test case name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the expected result. Can be one of the <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345" kindref="member">cester_test_status</ref> enum </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3163" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a4bbf495dfab6f7d245bdab8ba08bc57c" prot="public" static="no">
        <name>CESTER_TEST_SHOULD_SEGFAULT</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="cester_8h_1aac2231402f3558f6cc17f1be6ac5da99" kindref="member">CESTER_TEST_SHOULD</ref>(x, <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a3f9226d700d55073f12c68fccdfa5735" kindref="member">CESTER_RESULT_SEGFAULT</ref>);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the expected result of a test case to Segfault. If the test segfault then it passes. If it does not segfault it is marked as failed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the test case name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3172" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a4a9cafebfe3c5620b1d4151b01ff14fa" prot="public" static="no">
        <name>CESTER_TEST_SHOULD_FAIL</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="cester_8h_1aac2231402f3558f6cc17f1be6ac5da99" kindref="member">CESTER_TEST_SHOULD</ref>(x, <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a8a305fd1411e09df8e1c1788964b17f7" kindref="member">CESTER_RESULT_FAILURE</ref>);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the expected result of a test case to failure. If the test case passed then it marked as failure. If it failed then it consider as passed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the test case name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3181" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a898ac0546eb74e031ab91423d1f39499" prot="public" static="no">
        <name>CESTER_TEST_SHOULD_BE_TERMINATED</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="cester_8h_1aac2231402f3558f6cc17f1be6ac5da99" kindref="member">CESTER_TEST_SHOULD</ref>(x, <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345ac35451ef21484398f5117ce05feec1a5" kindref="member">CESTER_RESULT_TERMINATED</ref>);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the expected test case result. If the test case is terminated by user or another program then it passes ortherwise it fails.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the test case name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3189" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a81648a37951861ef9886ad9b21a4a31f" prot="public" static="no">
        <name>CESTER_TEST_SHOULD_LEAK_MEMORY</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="cester_8h_1aac2231402f3558f6cc17f1be6ac5da99" kindref="member">CESTER_TEST_SHOULD</ref>(x, <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345add9c5fd7f94da616cd4399103aa087ff" kindref="member">CESTER_RESULT_MEMORY_LEAK</ref>);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the expected test case result to leak memory. If the test case does not leak any memory then the test case is marked as failure.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the test case name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3198" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1a5046e1cbf958143f3bf7aded35204202" prot="public" static="no">
        <name>malloc</name>
        <param><defname>x</defname></param>
        <initializer>cester_malloc( x, __FILE__, __LINE__, <ref refid="cester_8h_1a828bb1dfda1afd67ca795075903d227d" kindref="member">__FUNCTION__</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Override the default malloc function for mem test </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="4066" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="4066" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cester_8h_1affb9fc32698fab7f7b36e0cf8e64c83e" prot="public" static="no">
        <name>free</name>
        <param><defname>x</defname></param>
        <initializer>cester_free( x, __FILE__, __LINE__, <ref refid="cester_8h_1a828bb1dfda1afd67ca795075903d227d" kindref="member">__FUNCTION__</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Override the default free function for mem test </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="4067" column="9" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="4067" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345" prot="public" static="no">
        <name>cester_test_status</name>
        <enumvalue id="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a2d2cd6b7d1d88a8d8e74cf5578ff128d" prot="public">
          <name>CESTER_RESULT_SUCCESS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>the test case passed </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a8a305fd1411e09df8e1c1788964b17f7" prot="public">
          <name>CESTER_RESULT_FAILURE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>the test case failes dues to various reason mostly AssertionError </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345ac35451ef21484398f5117ce05feec1a5" prot="public">
          <name>CESTER_RESULT_TERMINATED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>in isolated test, the test case was termiated by a user or another program </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a3f9226d700d55073f12c68fccdfa5735" prot="public">
          <name>CESTER_RESULT_SEGFAULT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>the test case crahses or causes segmentation fault </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345add9c5fd7f94da616cd4399103aa087ff" prot="public">
          <name>CESTER_RESULT_MEMORY_LEAK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>the test case passes or fails but failed to free allocated memory </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a4bb5e03c6ff510be176a4148690ade14" prot="public">
          <name>CESTER_RESULT_TIMED_OUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cester terminated the test case because it running for too long </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a64d06d0e4b203370998b22f6d5bf9b6c" prot="public">
          <name>CESTER_RESULT_UNKNOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>the test case was never ran </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The execution status of a test case that indicates whether a test passes of fails. And also enable the detection of the reason if a test fail. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="201" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="201" bodyend="211"/>
      </memberdef>
      <memberdef kind="enum" id="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81" prot="public" static="no">
        <name>cester_test_type</name>
        <enumvalue id="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a4c6ccc8da2c763d8adc49f909c036b21" prot="public">
          <name>CESTER_NORMAL_TEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>normal test in global or test suite. For internal use only. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a4580ff0d5e0421e5314ba686ebfc6be5" prot="public">
          <name>CESTER_NORMAL_TODO_TEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>test to be implemented in future. For internal use only. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a6907852b88f43904379b31e0b21d9644" prot="public">
          <name>CESTER_NORMAL_SKIP_TEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>test to be skipped. For internal use only. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a4358176c383ca80e5b713687907633a6" prot="public">
          <name>CESTER_BEFORE_ALL_TEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>test to run before all normal tests in global or test suite. For internal use only. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81ad278ec99fbd7edd505e7c9c1eabd2419" prot="public">
          <name>CESTER_BEFORE_EACH_TEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>test to run before each normal tests in global or test suite. For internal use only. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a58ac3fc8c71100848235437bc1fb49d1" prot="public">
          <name>CESTER_AFTER_ALL_TEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>test to run after all normal tests in global or test suite. For internal use only. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a3591c4344db24010356c4b68be130984" prot="public">
          <name>CESTER_AFTER_EACH_TEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>test to run after each normal tests in global or test suite. For internal use only. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a486668eab9d218bdceb3ec4435d59d3f" prot="public">
          <name>CESTER_OPTIONS_FUNCTION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>the cester function for test, this wil be excuted before running the tests. For internal use only. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81aab46343fb2c77645e1a80b7d5dc8166a" prot="public">
          <name>CESTER_TEST_FILE_COMMENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The function that holds the text defined in the CESTER_COMMENT macro. For internal use only. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a6becd1681a2bbf00951393da4c4f5fd4" prot="public">
          <name>CESTER_TESTS_TERMINATOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>the last value in the test cases to terminates the tests. For internal use only. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="213" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="213" bodyend="224"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="cester_8h_1ae2b502c266a25e61afd49a92601e0200" prot="public" static="no">
        <type>enum <ref refid="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81" kindref="member">cester_test_type</ref></type>
        <definition>typedef enum cester_test_type  TestType</definition>
        <argsstring></argsstring>
        <name>TestType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cester_8h_1abfd2a6d8c09aa2c747f283a947084609" prot="public" static="no">
        <type>struct <ref refid="structtest__instance" kindref="compound">test_instance</ref></type>
        <definition>typedef struct test_instance  TestInstance</definition>
        <argsstring></argsstring>
        <name>TestInstance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The test instance that contains the command line argument length and values, with void* pointer that can be used to share data between unit tests. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="235" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cester_8h_1a400de0160bf119dca9330f842ee9cc9f" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* cester_test) (TestInstance *)</definition>
        <argsstring>)(TestInstance *)</argsstring>
        <name>cester_test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function signature for each test case and the before after functions. It accepts the <ref refid="structtest__instance" kindref="compound">test_instance</ref> as it only argument. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="241" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cester_8h_1a3c85b40298baa6fe95cfe326ef321eca" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* cester_before_after_each) (TestInstance *, char *const, unsigned)</definition>
        <argsstring>)(TestInstance *, char *const, unsigned)</argsstring>
        <name>cester_before_after_each</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function signature for function to execute before and after each test cases. It accepts the <ref refid="structtest__instance" kindref="compound">test_instance</ref>, char* and unsigned as parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="247" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cester_8h_1a0824f9d2bee725592bd334ff16d6bc47" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* cester_void) ()</definition>
        <argsstring>)()</argsstring>
        <name>cester_void</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A void function signature with no return type and no parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="252" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cester_8h_1a9fe713844062da45ba493e7ec829cbaf" prot="public" static="no">
        <type>struct <ref refid="structtest__case" kindref="compound">test_case</ref></type>
        <definition>typedef struct test_case  TestCase</definition>
        <argsstring></argsstring>
        <name>TestCase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="268" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cester_8h_1a5d7bfb2ddb38f278d25e674dcd6cc347" prot="public" static="no">
        <type>struct <ref refid="structallocated__memory" kindref="compound">allocated_memory</ref></type>
        <definition>typedef struct allocated_memory  AllocatedMemory</definition>
        <argsstring></argsstring>
        <name>AllocatedMemory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="278" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cester_8h_1a070259cacab7aadac6ed756f2565dc5e" prot="public" static="no">
        <type>struct <ref refid="structcester__array__struct" kindref="compound">cester_array_struct</ref></type>
        <definition>typedef struct cester_array_struct  CesterArray</definition>
        <argsstring></argsstring>
        <name>CesterArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="299" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cester_8h_1a4201385d22afbfdd009562909b03fb0f" prot="public" static="no">
        <type>struct <ref refid="structsuper__test__instance" kindref="compound">super_test_instance</ref></type>
        <definition>typedef struct super_test_instance  SuperTestInstance</definition>
        <argsstring></argsstring>
        <name>SuperTestInstance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This structure manages the <emphasis>BEFORE</emphasis> and <emphasis>AFTER</emphasis> functions for the test main <ref refid="structtest__instance" kindref="compound">test_instance</ref>. And also accounts for all the registered test cases. This is for Cester internal use only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="349" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="cester_8h_1a02df3e2f0291bf06f3a685829975efec" prot="public" static="no" mutable="no">
        <type>jmp_buf</type>
        <definition>jmp_buf buf</definition>
        <argsstring></argsstring>
        <name>buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="79" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cester_8h_1a3fe6cc19b68201d2eb34b35f3667ebd7" prot="public" static="no" mutable="no">
        <type><ref refid="cester_8h_1a4201385d22afbfdd009562909b03fb0f" kindref="member">SuperTestInstance</ref></type>
        <definition>SuperTestInstance superTestInstance</definition>
        <argsstring></argsstring>
        <name>superTestInstance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="360" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cester_8h_1af052f00f77d318e4ceb4c5240dabf2e8" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* default_color</definition>
        <argsstring></argsstring>
        <name>default_color</name>
        <initializer>= <ref refid="cester_8h_1a694ad0cd5307d272e3e3ca64612176fb" kindref="member">CESTER_RESET_TERMINAL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="609" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="609" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cester_8h_1a8b63902b13dfba286b05aac61490ab0c" prot="public" static="yes" mutable="no">
        <type><ref refid="cester_8h_1a9fe713844062da45ba493e7ec829cbaf" kindref="member">TestCase</ref></type>
        <definition>TestCase cester_test_cases[]</definition>
        <argsstring>[]</argsstring>
        <name>cester_test_cases</name>
        <initializer>= {




{ <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a64d06d0e4b203370998b22f6d5bf9b6c" kindref="member">CESTER_RESULT_UNKNOWN</ref>, 0, <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345a2d2cd6b7d1d88a8d8e74cf5578ff128d" kindref="member">CESTER_RESULT_SUCCESS</ref>, 0.000, 0.000, NULL, NULL, NULL, NULL, NULL, <ref refid="cester_8h_1a0d3b94e7c3af7e5d5e24eb90ef224c81a6becd1681a2bbf00951393da4c4f5fd4" kindref="member">CESTER_TESTS_TERMINATOR</ref> }



}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3030" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3030" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cester_8h_1ada020c27350cdf742781f6dc56e6df87" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> unsigned</type>
        <definition>static __CESTER_INLINE__ unsigned cester_array_init</definition>
        <argsstring>(CesterArray **)</argsstring>
        <name>cester_array_init</name>
        <param>
          <type><ref refid="cester_8h_1a070259cacab7aadac6ed756f2565dc5e" kindref="member">CesterArray</ref> **</type>
          <defname>out</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="352" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3924" bodyend="3940"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a89af02d2d2b853ef2eacc264142eae59" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> unsigned</type>
        <definition>static __CESTER_INLINE__ unsigned cester_array_add</definition>
        <argsstring>(CesterArray *, void *)</argsstring>
        <name>cester_array_add</name>
        <param>
          <type><ref refid="cester_8h_1a070259cacab7aadac6ed756f2565dc5e" kindref="member">CesterArray</ref> *</type>
          <defname>array</defname>
        </param>
        <param>
          <type>void *</type>
          <defname>item</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="353" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3942" bodyend="3964"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a6aede05d4d63ce173a9b57933622322d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void *</type>
        <definition>static __CESTER_INLINE__ void * cester_array_remove_at</definition>
        <argsstring>(CesterArray *, unsigned)</argsstring>
        <name>cester_array_remove_at</name>
        <param>
          <type><ref refid="cester_8h_1a070259cacab7aadac6ed756f2565dc5e" kindref="member">CesterArray</ref> *</type>
          <defname>array</defname>
        </param>
        <param>
          <type>unsigned</type>
          <defname>index</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="354" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3966" bodyend="3975"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a940cdb335ac7818c70faada9d5d66bff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> unsigned</type>
        <definition>static __CESTER_INLINE__ unsigned cester_run_all_test</definition>
        <argsstring>(unsigned, char **)</argsstring>
        <name>cester_run_all_test</name>
        <param>
          <type>unsigned</type>
          <defname>argc</defname>
        </param>
        <param>
          <type>char **</type>
          <defname>argv</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="356" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3698" bodyend="3866"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a2bf65d12370ce2f91870d1c6b5d928bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_str_value_after_first</definition>
        <argsstring>(char *, char, char **)</argsstring>
        <name>cester_str_value_after_first</name>
        <param>
          <type>char *</type>
          <defname>arg</defname>
        </param>
        <param>
          <type>char</type>
          <defname>from</defname>
        </param>
        <param>
          <type>char **</type>
          <defname>out</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="357" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="752" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a5bed9e5f772e262547db94f402a0c358" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> char *</type>
        <definition>static __CESTER_INLINE__ char* cester_extract_name</definition>
        <argsstring>(char const *const file_path)</argsstring>
        <name>cester_extract_name</name>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="612" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="612" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a48eddac0dcab1d922af1dddb6bfd6ca3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> char *</type>
        <definition>static __CESTER_INLINE__ char* cester_extract_name_only</definition>
        <argsstring>(char const *const file_path)</argsstring>
        <name>cester_extract_name_only</name>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="628" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="628" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a1b18fc0fc447090febc5bd378ebd8265" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> unsigned</type>
        <definition>static __CESTER_INLINE__ unsigned cester_str_after_prefix</definition>
        <argsstring>(const char *arg, char *prefix, unsigned prefix_size, char **out)</argsstring>
        <name>cester_str_after_prefix</name>
        <param>
          <type>const char *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>prefix_size</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="641" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="641" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a6fd717d4c29095d4d4bc580177b95692" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> char *</type>
        <definition>static __CESTER_INLINE__ char* cester_str_replace</definition>
        <argsstring>(char *str, char old_char, char new_char)</argsstring>
        <name>cester_str_replace</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>old_char</declname>
        </param>
        <param>
          <type>char</type>
          <declname>new_char</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="667" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="667" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a00a1e3609f372c462a0408c16e3b2b0e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> unsigned</type>
        <definition>static __CESTER_INLINE__ unsigned cester_string_equals</definition>
        <argsstring>(char *arg, char *arg1)</argsstring>
        <name>cester_string_equals</name>
        <param>
          <type>char *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>arg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="684" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="684" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a9d90fb92ddc3b49500adf79aea869744" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> unsigned</type>
        <definition>static __CESTER_INLINE__ unsigned cester_string_starts_with</definition>
        <argsstring>(char *arg, char *arg1)</argsstring>
        <name>cester_string_starts_with</name>
        <param>
          <type>char *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>arg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="701" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="701" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a60e8c664d3517575bb0eb31e958d304a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void unpack_selected_extra_args</definition>
        <argsstring>(char *arg, char ***out, unsigned *out_size)</argsstring>
        <name>unpack_selected_extra_args</name>
        <param>
          <type>char *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>out</declname>
        </param>
        <param>
          <type>unsigned *</type>
          <declname>out_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="719" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="719" bodyend="750"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1aec0fea252e301581102bd68ff522210f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_concat_str</definition>
        <argsstring>(char **out, const char *extra)</argsstring>
        <name>cester_concat_str</name>
        <param>
          <type>char **</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="774" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="774" bodyend="791"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a129a3a845847d3eac249adfe3f6523dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_concat_char</definition>
        <argsstring>(char **out, char extra)</argsstring>
        <name>cester_concat_char</name>
        <param>
          <type>char **</type>
          <declname>out</declname>
        </param>
        <param>
          <type>char</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="797" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="797" bodyend="801"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1ad22b6f707b3e2d3c4401f8e87f476cc5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_concat_int</definition>
        <argsstring>(char **out, int extra)</argsstring>
        <name>cester_concat_int</name>
        <param>
          <type>char **</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="803" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="803" bodyend="807"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1af8e55ad20175b99e6c0daa95dbd1c0ca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_ptr_to_str</definition>
        <argsstring>(char **out, void *extra)</argsstring>
        <name>cester_ptr_to_str</name>
        <param>
          <type>char **</type>
          <declname>out</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="809" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="809" bodyend="812"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a9adf548936e327b04ee947a49fd72c5d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> unsigned</type>
        <definition>static __CESTER_INLINE__ unsigned cester_is_validate_output_option</definition>
        <argsstring>(char *format_option)</argsstring>
        <name>cester_is_validate_output_option</name>
        <param>
          <type>char *</type>
          <declname>format_option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="814" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="814" bodyend="819"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a9aaeef94f525218c317d1297257b8745" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_print_version</definition>
        <argsstring>()</argsstring>
        <name>cester_print_version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="847" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="847" bodyend="853"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a57cb88de7613a2413db45aa79617e4ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_print_help</definition>
        <argsstring>()</argsstring>
        <name>cester_print_help</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="855" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="855" bodyend="882"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a67dc3239f2646c940c8e69963446bc9e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_print_assertion</definition>
        <argsstring>(char const *const expression, char const *const file_path, unsigned const line_num)</argsstring>
        <name>cester_print_assertion</name>
        <param>
          <type>char const *const</type>
          <declname>expression</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <param>
          <type>unsigned const</type>
          <declname>line_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="884" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="884" bodyend="904"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1ab6e25963e66704ba89a4406bb16fc7af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_print_expect_actual</definition>
        <argsstring>(unsigned expecting, char const *const expect, char const *const received, char const *const file_path, unsigned const line_num)</argsstring>
        <name>cester_print_expect_actual</name>
        <param>
          <type>unsigned</type>
          <declname>expecting</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>expect</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>received</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <param>
          <type>unsigned const</type>
          <declname>line_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="906" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="906" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a20679d125a6602841d7fded2fcfc8a27" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void print_test_result</definition>
        <argsstring>(double time_spent)</argsstring>
        <name>print_test_result</name>
        <param>
          <type>double</type>
          <declname>time_spent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="946" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="946" bodyend="994"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a5b6353054276f04f1b644b079ddb6134" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void print_test_case_result</definition>
        <argsstring>(TestCase *test_case)</argsstring>
        <name>print_test_case_result</name>
        <param>
          <type><ref refid="cester_8h_1a9fe713844062da45ba493e7ec829cbaf" kindref="member">TestCase</ref> *</type>
          <declname>test_case</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="996" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="996" bodyend="1046"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1ab089f3b2588ea430bb4f9507eb3f12a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void print_test_case_outputs</definition>
        <argsstring>(TestCase *test_case)</argsstring>
        <name>print_test_case_outputs</name>
        <param>
          <type><ref refid="cester_8h_1a9fe713844062da45ba493e7ec829cbaf" kindref="member">TestCase</ref> *</type>
          <declname>test_case</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1048" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1048" bodyend="1070"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a595c67a3f8261d43cae076c7b49ba489" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void write_testcase_tap</definition>
        <argsstring>(TestCase *a_test_case, char *file_name, int index)</argsstring>
        <name>write_testcase_tap</name>
        <param>
          <type><ref refid="cester_8h_1a9fe713844062da45ba493e7ec829cbaf" kindref="member">TestCase</ref> *</type>
          <declname>a_test_case</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1072" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1072" bodyend="1129"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a23b0dbf55300af1a3dead3a70cce6e39" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void write_testcase_tap_v13</definition>
        <argsstring>(TestCase *a_test_case, char *file_name, int index)</argsstring>
        <name>write_testcase_tap_v13</name>
        <param>
          <type><ref refid="cester_8h_1a9fe713844062da45ba493e7ec829cbaf" kindref="member">TestCase</ref> *</type>
          <declname>a_test_case</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1131" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1131" bodyend="1209"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a1c18fb94068931ec24757a214975b1df" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void write_testcase_junitxml</definition>
        <argsstring>(TestCase *a_test_case, char *file_name)</argsstring>
        <name>write_testcase_junitxml</name>
        <param>
          <type><ref refid="cester_8h_1a9fe713844062da45ba493e7ec829cbaf" kindref="member">TestCase</ref> *</type>
          <declname>a_test_case</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1211" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1211" bodyend="1263"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1ac4ebdd71e35f5c81821679c8ab66c92e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> unsigned</type>
        <definition>static __CESTER_INLINE__ unsigned check_memory_allocated_for_functions</definition>
        <argsstring>(char *funcname1, char *funcname2, char *prefix, char **write_string)</argsstring>
        <name>check_memory_allocated_for_functions</name>
        <param>
          <type>char *</type>
          <declname>funcname1</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>funcname2</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>write_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1265" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1265" bodyend="1295"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1abffff1119ce46a44eee27d95ef6b974f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> int</type>
        <definition>static __CESTER_INLINE__ int cester_print_result</definition>
        <argsstring>(TestCase cester_test_cases[], TestInstance *test_instance)</argsstring>
        <name>cester_print_result</name>
        <param>
          <type><ref refid="cester_8h_1a9fe713844062da45ba493e7ec829cbaf" kindref="member">TestCase</ref></type>
          <declname>cester_test_cases</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="cester_8h_1abfd2a6d8c09aa2c747f283a947084609" kindref="member">TestInstance</ref> *</type>
          <declname>test_instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="1297" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="1297" bodyend="1548"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1ad5fefdda7fe2e21023a0c22a8291120a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_evaluate_expression</definition>
        <argsstring>(unsigned eval_result, char const *const expression, char const *const file_path, unsigned const line_num)</argsstring>
        <name>cester_evaluate_expression</name>
        <param>
          <type>unsigned</type>
          <declname>eval_result</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>expression</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <param>
          <type>unsigned const</type>
          <declname>line_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2660" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2660" bodyend="2677"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1ad205ac079eb12c9b6d1aa8ee6e4b8487" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_evaluate_expect_actual</definition>
        <argsstring>(unsigned eval_result, unsigned expecting, char const *const expected, char const *const actual, char const *const file_path, unsigned const line_num)</argsstring>
        <name>cester_evaluate_expect_actual</name>
        <param>
          <type>unsigned</type>
          <declname>eval_result</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>expecting</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <param>
          <type>unsigned const</type>
          <declname>line_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2679" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2679" bodyend="2699"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1ad7a7383eb0739bd69193332fb1bca149" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_evaluate_expect_actual_str</definition>
        <argsstring>(char const *const expected, char const *const actual, unsigned expecting, char const *const file_path, unsigned const line_num)</argsstring>
        <name>cester_evaluate_expect_actual_str</name>
        <param>
          <type>char const *const</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>expecting</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <param>
          <type>unsigned const</type>
          <declname>line_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2701" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2701" bodyend="2719"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a28c1d6c0bac237d44aa7cc51ed204737" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_evaluate_expect_actual_ptr</definition>
        <argsstring>(void *ptr1, void *ptr2, unsigned expecting, char const *const file_path, unsigned const line_num)</argsstring>
        <name>cester_evaluate_expect_actual_ptr</name>
        <param>
          <type>void *</type>
          <declname>ptr1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr2</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>expecting</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <param>
          <type>unsigned const</type>
          <declname>line_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2721" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2721" bodyend="2745"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a09f618649526f0899751a231c8b042ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_compare_char</definition>
        <argsstring>(int eval_result, char const *const expr, char first, char second, char const *const op, char const *const file_path, unsigned const line_num)</argsstring>
        <name>cester_compare_char</name>
        <param>
          <type>int</type>
          <declname>eval_result</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>char</type>
          <declname>first</declname>
        </param>
        <param>
          <type>char</type>
          <declname>second</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>op</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <param>
          <type>unsigned const</type>
          <declname>line_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2747" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2747" bodyend="2751"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a8baad3b7278556a3908a36fbbcbc1d10" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_compare_uchar</definition>
        <argsstring>(int eval_result, char const *const expr, unsigned char first, unsigned char second, char const *const op, char const *const file_path, unsigned const line_num)</argsstring>
        <name>cester_compare_uchar</name>
        <param>
          <type>int</type>
          <declname>eval_result</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>first</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>second</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>op</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <param>
          <type>unsigned const</type>
          <declname>line_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2753" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2753" bodyend="2757"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1aaeccf9eb329390fdd3a24f3dfaab3d74" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_compare_int</definition>
        <argsstring>(int eval_result, char const *const expr, int first, int second, char const *const op, char const *const file_path, unsigned const line_num)</argsstring>
        <name>cester_compare_int</name>
        <param>
          <type>int</type>
          <declname>eval_result</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>int</type>
          <declname>second</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>op</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <param>
          <type>unsigned const</type>
          <declname>line_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2759" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2759" bodyend="2763"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a79a171ca1cc4925dbca28dd937fc1e76" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_compare_uint</definition>
        <argsstring>(int eval_result, char const *const expr, unsigned int first, unsigned int second, char const *const op, char const *const file_path, unsigned const line_num)</argsstring>
        <name>cester_compare_uint</name>
        <param>
          <type>int</type>
          <declname>eval_result</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>second</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>op</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <param>
          <type>unsigned const</type>
          <declname>line_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2765" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2765" bodyend="2769"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a8b8b644e97b8bd4db222d52656b167a1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_compare_short</definition>
        <argsstring>(int eval_result, char const *const expr, short first, short second, char const *const op, char const *const file_path, unsigned const line_num)</argsstring>
        <name>cester_compare_short</name>
        <param>
          <type>int</type>
          <declname>eval_result</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>short</type>
          <declname>first</declname>
        </param>
        <param>
          <type>short</type>
          <declname>second</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>op</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <param>
          <type>unsigned const</type>
          <declname>line_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2771" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2771" bodyend="2775"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a3306c65e1c06e3e21f249e58cd00de69" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_compare_ushort</definition>
        <argsstring>(int eval_result, char const *const expr, unsigned short first, unsigned short second, char const *const op, char const *const file_path, unsigned const line_num)</argsstring>
        <name>cester_compare_ushort</name>
        <param>
          <type>int</type>
          <declname>eval_result</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>first</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>second</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>op</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <param>
          <type>unsigned const</type>
          <declname>line_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2777" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2777" bodyend="2781"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1ad6107c442c028d35242bc82766a8242d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_compare_long</definition>
        <argsstring>(int eval_result, char const *const expr, long first, long second, char const *const op, char const *const file_path, unsigned const line_num)</argsstring>
        <name>cester_compare_long</name>
        <param>
          <type>int</type>
          <declname>eval_result</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>long</type>
          <declname>first</declname>
        </param>
        <param>
          <type>long</type>
          <declname>second</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>op</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <param>
          <type>unsigned const</type>
          <declname>line_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2783" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2783" bodyend="2787"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a18d84fcd1f323cf4f0334839b9b81d14" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_compare_ulong</definition>
        <argsstring>(int eval_result, char const *const expr, unsigned long first, unsigned long second, char const *const op, char const *const file_path, unsigned const line_num)</argsstring>
        <name>cester_compare_ulong</name>
        <param>
          <type>int</type>
          <declname>eval_result</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>first</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>second</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>op</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <param>
          <type>unsigned const</type>
          <declname>line_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2789" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2789" bodyend="2793"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1ab20d5f3dad0d79a98302f69aa24b151c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_compare_llong</definition>
        <argsstring>(int eval_result, char const *const expr, __CESTER_LONG_LONG__ first, __CESTER_LONG_LONG__ second, char const *const op, char const *const file_path, unsigned const line_num)</argsstring>
        <name>cester_compare_llong</name>
        <param>
          <type>int</type>
          <declname>eval_result</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>expr</declname>
        </param>
        <param>
          <type><ref refid="cester_8h_1a6405ac2e364bfb49385d93f50c1ea3e9" kindref="member">__CESTER_LONG_LONG__</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="cester_8h_1a6405ac2e364bfb49385d93f50c1ea3e9" kindref="member">__CESTER_LONG_LONG__</ref></type>
          <declname>second</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>op</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <param>
          <type>unsigned const</type>
          <declname>line_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2795" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2795" bodyend="2799"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1aae9877af71190c99a411fd68ca2779a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_compare_ullong</definition>
        <argsstring>(int eval_result, char const *const expr, unsigned __CESTER_LONG_LONG__ first, unsigned __CESTER_LONG_LONG__ second, char const *const op, char const *const file_path, unsigned const line_num)</argsstring>
        <name>cester_compare_ullong</name>
        <param>
          <type>int</type>
          <declname>eval_result</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>unsigned <ref refid="cester_8h_1a6405ac2e364bfb49385d93f50c1ea3e9" kindref="member">__CESTER_LONG_LONG__</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type>unsigned <ref refid="cester_8h_1a6405ac2e364bfb49385d93f50c1ea3e9" kindref="member">__CESTER_LONG_LONG__</ref></type>
          <declname>second</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>op</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <param>
          <type>unsigned const</type>
          <declname>line_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2801" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2801" bodyend="2805"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a895e7d3808c37a9b5fab80170d5868b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_compare_float</definition>
        <argsstring>(int eval_result, char const *const expr, float first, float second, char const *const op, char const *const file_path, unsigned const line_num)</argsstring>
        <name>cester_compare_float</name>
        <param>
          <type>int</type>
          <declname>eval_result</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>float</type>
          <declname>first</declname>
        </param>
        <param>
          <type>float</type>
          <declname>second</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>op</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <param>
          <type>unsigned const</type>
          <declname>line_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2807" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2807" bodyend="2811"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a8b3822f6e19bce1c53b97805f34861aa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_compare_double</definition>
        <argsstring>(int eval_result, char const *const expr, double first, double second, char const *const op, char const *const file_path, unsigned const line_num)</argsstring>
        <name>cester_compare_double</name>
        <param>
          <type>int</type>
          <declname>eval_result</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>double</type>
          <declname>first</declname>
        </param>
        <param>
          <type>double</type>
          <declname>second</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>op</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <param>
          <type>unsigned const</type>
          <declname>line_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2813" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2813" bodyend="2817"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a9485a8283e3fa7162987b374200bf894" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_compare_ldouble</definition>
        <argsstring>(int eval_result, char const *const expr, long double first, long double second, char const *const op, char const *const file_path, unsigned const line_num)</argsstring>
        <name>cester_compare_ldouble</name>
        <param>
          <type>int</type>
          <declname>eval_result</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>first</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>second</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>op</declname>
        </param>
        <param>
          <type>char const *const</type>
          <declname>file_path</declname>
        </param>
        <param>
          <type>unsigned const</type>
          <declname>line_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="2819" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="2819" bodyend="2823"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1aa1d83078f03b42461ab078a4053a2430" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_register_test</definition>
        <argsstring>(char *test_name, cester_test f1, cester_before_after_each f2, cester_void f3, unsigned line_num, TestType test_type)</argsstring>
        <name>cester_register_test</name>
        <param>
          <type>char *</type>
          <declname>test_name</declname>
        </param>
        <param>
          <type><ref refid="cester_8h_1a400de0160bf119dca9330f842ee9cc9f" kindref="member">cester_test</ref></type>
          <declname>f1</declname>
        </param>
        <param>
          <type><ref refid="cester_8h_1a3c85b40298baa6fe95cfe326ef321eca" kindref="member">cester_before_after_each</ref></type>
          <declname>f2</declname>
        </param>
        <param>
          <type><ref refid="cester_8h_1a0824f9d2bee725592bd334ff16d6bc47" kindref="member">cester_void</ref></type>
          <declname>f3</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>line_num</declname>
        </param>
        <param>
          <type><ref refid="cester_8h_1ae2b502c266a25e61afd49a92601e0200" kindref="member">TestType</ref></type>
          <declname>test_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Manually register a test case </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3204" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3204" bodyend="3238"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1adee743749f2a51a744c42a595acd1fbd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_expected_test_result</definition>
        <argsstring>(const char *const test_name, enum cester_test_status expected_result)</argsstring>
        <name>cester_expected_test_result</name>
        <param>
          <type>const char *const</type>
          <declname>test_name</declname>
        </param>
        <param>
          <type>enum <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345" kindref="member">cester_test_status</ref></type>
          <declname>expected_result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3240" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3240" bodyend="3264"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a5336756fe764d6d2005cb35c7b03563f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> unsigned</type>
        <definition>static __CESTER_INLINE__ unsigned cester_run_test_no_isolation</definition>
        <argsstring>(TestInstance *, TestCase *, unsigned)</argsstring>
        <name>cester_run_test_no_isolation</name>
        <param>
          <type><ref refid="cester_8h_1abfd2a6d8c09aa2c747f283a947084609" kindref="member">TestInstance</ref> *</type>
          <defname>test_instance</defname>
        </param>
        <param>
          <type><ref refid="cester_8h_1a9fe713844062da45ba493e7ec829cbaf" kindref="member">TestCase</ref> *</type>
          <defname>a_test_case</defname>
        </param>
        <param>
          <type>unsigned</type>
          <defname>index</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3266" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3536" bodyend="3594"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a27c2010d25d0bd1513cf977fb93d9f9a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_report_single_test_result</definition>
        <argsstring>(unsigned last_status, TestCase *a_test_case)</argsstring>
        <name>cester_report_single_test_result</name>
        <param>
          <type>unsigned</type>
          <declname>last_status</declname>
        </param>
        <param>
          <type><ref refid="cester_8h_1a9fe713844062da45ba493e7ec829cbaf" kindref="member">TestCase</ref> *</type>
          <declname>a_test_case</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3268" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3268" bodyend="3357"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1abacf7d7ece738b5b67ea240eee8e4656" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_run_test</definition>
        <argsstring>(TestInstance *test_instance, TestCase *a_test_case, unsigned index)</argsstring>
        <name>cester_run_test</name>
        <param>
          <type><ref refid="cester_8h_1abfd2a6d8c09aa2c747f283a947084609" kindref="member">TestInstance</ref> *</type>
          <declname>test_instance</declname>
        </param>
        <param>
          <type><ref refid="cester_8h_1a9fe713844062da45ba493e7ec829cbaf" kindref="member">TestCase</ref> *</type>
          <declname>a_test_case</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3359" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3359" bodyend="3534"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1aed7892372cdd63383cf15b5de50eb126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cester_claim_signals</definition>
        <argsstring>()</argsstring>
        <name>cester_claim_signals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3598" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3875" bodyend="3882"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a1a68fa19aaa51f8b3d7b3fc564751d62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cester_recover_on_signal</definition>
        <argsstring>(int sig_num)</argsstring>
        <name>cester_recover_on_signal</name>
        <param>
          <type>int</type>
          <declname>sig_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3599" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3891" bodyend="3919"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1ae526b39cd608657444c4092a9d2fa338" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_run_all_test_iterator</definition>
        <argsstring>(int start)</argsstring>
        <name>cester_run_all_test_iterator</name>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3604" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3604" bodyend="3696"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3869" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3869" bodyend="3871"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a02a7792da51f3228121f21a5753818c7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void *</type>
        <definition>static __CESTER_INLINE__ void* cester_malloc</definition>
        <argsstring>(unsigned size, const char *file, unsigned line, const char *func)</argsstring>
        <name>cester_malloc</name>
        <param>
          <type>unsigned</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="3981" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="3981" bodyend="4030"/>
      </memberdef>
      <memberdef kind="function" id="cester_8h_1a419e9ee8a8b0331bec2fdf58b63bd2c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cester_8h_1ab5b83a0b9327495ccb1df5cfb348d91c" kindref="member">__CESTER_INLINE__</ref> void</type>
        <definition>static __CESTER_INLINE__ void cester_free</definition>
        <argsstring>(void *pointer, const char *file, unsigned line, const char *func)</argsstring>
        <name>cester_free</name>
        <param>
          <type>void *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" line="4032" column="1" bodyfile="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h" bodystart="4032" bodyend="4064"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>MIT License Copyright (c) 2020, Adewale Azeez </para></simplesect>
<simplesect kind="author"><para>Adewale Azeez <ulink url="mailto:azeezadewale98@gmail.com">azeezadewale98@gmail.com</ulink> </para></simplesect>
<simplesect kind="date"><para>10 April 2020</para></simplesect>
Cester is a header only unit testing framework for C. The header file can be downloaded and placed in a project folder or can be used as part of libopen library by including it in the projects like <computeroutput>&lt;libopen/cester.h&gt;</computeroutput>.</para><para>A single test file is considered a test suite in cester, a single test file should contain related tests functions only. </para>    </detaileddescription>
    <location file="/home/travis/build/exoticlibraries/libcester/include/exotic/cester.h"/>
  </compounddef>
</doxygen>
