<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structtest__case" kind="struct" language="C++" prot="public">
    <compoundname>test_case</compoundname>
    <includes refid="cester_8h" local="no">cester.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structtest__case_1a994234332a7abb41ecbaa299a1b573e5" prot="public" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned test_case::execution_status</definition>
        <argsstring></argsstring>
        <name>execution_status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the test execution result status. For internal use only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/libcester/libcester/include/exotic/cester.h" line="255" column="1" bodyfile="/home/runner/work/libcester/libcester/include/exotic/cester.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtest__case_1ae8cb1680656e536386976c71ec2e2caa" prot="public" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned test_case::line_num</definition>
        <argsstring></argsstring>
        <name>line_num</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the line number where the test case is created. For internal use only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/libcester/libcester/include/exotic/cester.h" line="256" column="1" bodyfile="/home/runner/work/libcester/libcester/include/exotic/cester.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtest__case_1a9c3fac97789112c1487d64183070c960" prot="public" static="no" mutable="no">
        <type>enum <ref refid="cester_8h_1a79d2dcbdd3ffa0fb191935efec322345" kindref="member">cester_test_status</ref></type>
        <definition>enum cester_test_status test_case::expected_result</definition>
        <argsstring></argsstring>
        <name>expected_result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The expected result for the test case. For internal use only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/libcester/libcester/include/exotic/cester.h" line="256" column="1" bodyfile="/home/runner/work/libcester/libcester/include/exotic/cester.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtest__case_1adcf1da5ed10b099d309884affbb04d5d" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double test_case::start_tic</definition>
        <argsstring></argsstring>
        <name>start_tic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the time taken for the test case to complete. For internal use only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/libcester/libcester/include/exotic/cester.h" line="259" column="1" bodyfile="/home/runner/work/libcester/libcester/include/exotic/cester.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtest__case_1ac2aa175fa3efd20971c2be05a30e9586" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double test_case::execution_time</definition>
        <argsstring></argsstring>
        <name>execution_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the time taken for the test case to complete. For internal use only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/libcester/libcester/include/exotic/cester.h" line="260" column="1" bodyfile="/home/runner/work/libcester/libcester/include/exotic/cester.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtest__case_1ac7262cf2814fda9c7bf154de5ce0d6ba" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* test_case::execution_output</definition>
        <argsstring></argsstring>
        <name>execution_output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the test execution output in string. For internal use only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/libcester/libcester/include/exotic/cester.h" line="262" column="1" bodyfile="/home/runner/work/libcester/libcester/include/exotic/cester.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtest__case_1a206e39b0afd5e7c8bb4e2ed93cc9444b" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* test_case::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the test function name. For internal use only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/libcester/libcester/include/exotic/cester.h" line="263" column="1" bodyfile="/home/runner/work/libcester/libcester/include/exotic/cester.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtest__case_1ab59b81808bb6b0a06be72bd4d981d23b" prot="public" static="no" mutable="no">
        <type><ref refid="cester_8h_1a400de0160bf119dca9330f842ee9cc9f" kindref="member">cester_test</ref></type>
        <definition>cester_test test_case::test_function</definition>
        <argsstring></argsstring>
        <name>test_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the function that enclosed the tests. For internal use only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/libcester/libcester/include/exotic/cester.h" line="264" column="1" bodyfile="/home/runner/work/libcester/libcester/include/exotic/cester.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtest__case_1ac9030449f6bb9761768753c76dba310a" prot="public" static="no" mutable="no">
        <type><ref refid="cester_8h_1a3c85b40298baa6fe95cfe326ef321eca" kindref="member">cester_before_after_each</ref></type>
        <definition>cester_before_after_each test_case::test_ba_function</definition>
        <argsstring></argsstring>
        <name>test_ba_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the function that enclosed the tests. For internal use only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/libcester/libcester/include/exotic/cester.h" line="265" column="1" bodyfile="/home/runner/work/libcester/libcester/include/exotic/cester.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtest__case_1a0c04f1c5db7affd2c45e647e7e4071aa" prot="public" static="no" mutable="no">
        <type><ref refid="cester_8h_1a0824f9d2bee725592bd334ff16d6bc47" kindref="member">cester_void</ref></type>
        <definition>cester_void test_case::test_void_function</definition>
        <argsstring></argsstring>
        <name>test_void_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the function that enclosed the tests. For internal use only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/libcester/libcester/include/exotic/cester.h" line="266" column="1" bodyfile="/home/runner/work/libcester/libcester/include/exotic/cester.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtest__case_1aeb5f7c42572866e903a2b4343e4fd4d1" prot="public" static="no" mutable="no">
        <type><ref refid="cester_8h_1ae2b502c266a25e61afd49a92601e0200" kindref="member">TestType</ref></type>
        <definition>TestType test_case::test_type</definition>
        <argsstring></argsstring>
        <name>test_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the type of the test function. For internal use only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/libcester/libcester/include/exotic/cester.h" line="267" column="1" bodyfile="/home/runner/work/libcester/libcester/include/exotic/cester.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="10">
        <label>test_case</label>
        <link refid="structtest__case"/>
        <childnode refid="11" relation="usage">
          <edgelabel>test_ba_function</edgelabel>
          <edgelabel>test_function</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>test_instance</label>
        <link refid="structtest__instance"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/libcester/libcester/include/exotic/cester.h" line="254" column="1" bodyfile="/home/runner/work/libcester/libcester/include/exotic/cester.h" bodystart="254" bodyend="268"/>
    <listofallmembers>
      <member refid="structtest__case_1ac7262cf2814fda9c7bf154de5ce0d6ba" prot="public" virt="non-virtual"><scope>test_case</scope><name>execution_output</name></member>
      <member refid="structtest__case_1a994234332a7abb41ecbaa299a1b573e5" prot="public" virt="non-virtual"><scope>test_case</scope><name>execution_status</name></member>
      <member refid="structtest__case_1ac2aa175fa3efd20971c2be05a30e9586" prot="public" virt="non-virtual"><scope>test_case</scope><name>execution_time</name></member>
      <member refid="structtest__case_1a9c3fac97789112c1487d64183070c960" prot="public" virt="non-virtual"><scope>test_case</scope><name>expected_result</name></member>
      <member refid="structtest__case_1ae8cb1680656e536386976c71ec2e2caa" prot="public" virt="non-virtual"><scope>test_case</scope><name>line_num</name></member>
      <member refid="structtest__case_1a206e39b0afd5e7c8bb4e2ed93cc9444b" prot="public" virt="non-virtual"><scope>test_case</scope><name>name</name></member>
      <member refid="structtest__case_1adcf1da5ed10b099d309884affbb04d5d" prot="public" virt="non-virtual"><scope>test_case</scope><name>start_tic</name></member>
      <member refid="structtest__case_1ac9030449f6bb9761768753c76dba310a" prot="public" virt="non-virtual"><scope>test_case</scope><name>test_ba_function</name></member>
      <member refid="structtest__case_1ab59b81808bb6b0a06be72bd4d981d23b" prot="public" virt="non-virtual"><scope>test_case</scope><name>test_function</name></member>
      <member refid="structtest__case_1aeb5f7c42572866e903a2b4343e4fd4d1" prot="public" virt="non-virtual"><scope>test_case</scope><name>test_type</name></member>
      <member refid="structtest__case_1a0c04f1c5db7affd2c45e647e7e4071aa" prot="public" virt="non-virtual"><scope>test_case</scope><name>test_void_function</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
